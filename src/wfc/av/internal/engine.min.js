import * as __WEBPACK_EXTERNAL_MODULE__config_js_feac86c3__ from "../../../config.js";
import * as __WEBPACK_EXTERNAL_MODULE__platform_js_5bab0402__ from "../../../platform.js";
import * as __WEBPACK_EXTERNAL_MODULE__messages_messageContentType_55d9ecb1__ from "../../messages/messageContentType";
import * as __WEBPACK_EXTERNAL_MODULE__model_conversation_0780e5f9__ from "../../model/conversation";
import * as __WEBPACK_EXTERNAL_MODULE__model_conversationType_15f72c18__ from "../../model/conversationType";
import * as __WEBPACK_EXTERNAL_MODULE__model_nullUserInfo_e3b93e16__ from "../../model/nullUserInfo";
import * as __WEBPACK_EXTERNAL_MODULE__util_longUtil_js_d8567d8b__ from "../../util/longUtil.js";
import * as __WEBPACK_EXTERNAL_MODULE__engine_avenginekit_ecab215a__ from "../engine/avenginekit";
import * as __WEBPACK_EXTERNAL_MODULE__engine_avenginekitproxy_1fb02dc3__ from "../engine/avenginekitproxy";
import * as __WEBPACK_EXTERNAL_MODULE__engine_callEndReason_07aecc5d__ from "../engine/callEndReason";
import * as __WEBPACK_EXTERNAL_MODULE__engine_callSession_c8924da4__ from "../engine/callSession";
import * as __WEBPACK_EXTERNAL_MODULE__engine_callState_9f65f17e__ from "../engine/callState";
import * as __WEBPACK_EXTERNAL_MODULE__engine_participantProfile_3b6167a6__ from "../engine/participantProfile";
import * as __WEBPACK_EXTERNAL_MODULE__engine_rcEndReason_3aaf0b41__ from "../engine/rcEndReason";
import * as __WEBPACK_EXTERNAL_MODULE__engine_rcState_0c29bc19__ from "../engine/rcState";
import * as __WEBPACK_EXTERNAL_MODULE__engine_subscriber_55ef553e__ from "../engine/subscriber";
import * as __WEBPACK_EXTERNAL_MODULE__engine_videoProfile_3d10661d__ from "../engine/videoProfile";
import * as __WEBPACK_EXTERNAL_MODULE__engine_videoType_c198b7fe__ from "../engine/videoType";
import * as __WEBPACK_EXTERNAL_MODULE__messages_addParticipantsMessageContent_e5933adc__ from "../messages/addParticipantsMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_callAnswerMessageContent_dadb75d0__ from "../messages/callAnswerMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_callByeMessageContent_bc5f41f7__ from "../messages/callByeMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_callModifyMessageContent_dafbb85c__ from "../messages/callModifyMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_callStartMessageContent_6cc158ed__ from "../messages/callStartMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_conferenceChangeModeContent_da8c6c1f__ from "../messages/conferenceChangeModeContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_muteVideoMessageContent_33b54995__ from "../messages/muteVideoMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_rcAcceptInviteMessageContent_d3f1af63__ from "../messages/rcAcceptInviteMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_rcEndMessageContent_f241994f__ from "../messages/rcEndMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_rcInputEventMessageContent_cd47b2e3__ from "../messages/rcInputEventMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_rcInviteMessageContent_ffd6f517__ from "../messages/rcInviteMessageContent";
import * as __WEBPACK_EXTERNAL_MODULE__messages_rcRequestMessageContent_29ad6093__ from "../messages/rcRequestMessageContent";
/******/ var __webpack_modules__ = ({

/***/ "./av/internal/avenginekitImpl.js":
/*!****************************************!*\
  !*** ./av/internal/avenginekitImpl.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WfcAVEngineKitImpl: () => (/* binding */ WfcAVEngineKitImpl),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");
/* harmony import */ var babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! babel-runtime/core-js/map */ "./node_modules/babel-runtime/core-js/map.js");
/* harmony import */ var babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../messages/messageContentType */ "../../messages/messageContentType");
/* harmony import */ var _messages_callByeMessageContent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../messages/callByeMessageContent */ "../messages/callByeMessageContent");
/* harmony import */ var _messages_callAnswerMessageContent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../messages/callAnswerMessageContent */ "../messages/callAnswerMessageContent");
/* harmony import */ var _messages_callStartMessageContent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../messages/callStartMessageContent */ "../messages/callStartMessageContent");
/* harmony import */ var _messages_rcInputEventMessageContent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../messages/rcInputEventMessageContent */ "../messages/rcInputEventMessageContent");
/* harmony import */ var _messages_callModifyMessageContent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../messages/callModifyMessageContent */ "../messages/callModifyMessageContent");
/* harmony import */ var _model_conversationType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../model/conversationType */ "../../model/conversationType");
/* harmony import */ var _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../engine/callEndReason */ "../engine/callEndReason");
/* harmony import */ var _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../engine/avenginekitproxy */ "../engine/avenginekitproxy");
/* harmony import */ var _engine_callState__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../engine/callState */ "../engine/callState");
/* harmony import */ var _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./callSessionImpl */ "./av/internal/callSessionImpl.js");
/* harmony import */ var _messages_addParticipantsMessageContent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../messages/addParticipantsMessageContent */ "../messages/addParticipantsMessageContent");
/* harmony import */ var _engine_avenginekit__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../engine/avenginekit */ "../engine/avenginekit");
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../config.js */ "../../../config.js");
/* harmony import */ var _messages_rcRequestMessageContent__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../messages/rcRequestMessageContent */ "../messages/rcRequestMessageContent");
/* harmony import */ var _engine_rcState__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../engine/rcState */ "../engine/rcState");




















class WfcAVEngineKitImpl extends _engine_avenginekit__WEBPACK_IMPORTED_MODULE_15__["default"] {

    constructor() {
        super();
        this.sendMessageId = 0;
        this.sendConferenceRequestId = 0;

        this._fixLongSerializedIssue = msg => {
            if (typeof msg !== 'string') {
                return msg;
            }
            msg = JSON.parse(msg);
            if (typeof msg === 'string') {
                msg = JSON.parse(msg);
            }
            return msg;
        };

        this.onSendMessageResult = (event, msg) => {
            msg = this._fixLongSerializedIssue(msg);
            let cb = this.sendMessageCallbackMap.get(msg.sendMessageId);
            if (cb) {
                cb(msg.error, msg.messageUid, msg.timestamp);
            }
            this.sendMessageCallbackMap.delete(msg.sendMessageId);
        };

        this.onSendConferenceRequestResult = (event, request) => {
            console.log('av-c', 'sendConferenceRequestResult', event, request);
            request = this._fixLongSerializedIssue(request);
            let cb = this.sendConferenceRequestCallbackMap.get(request.sendConferenceRequestId);
            if (cb) {
                cb(request.error, request.response);
                this.sendConferenceRequestCallbackMap.delete(request.sendConferenceRequestId);
            }
        };

        this.onConferenceEvent = (event, conferenceEvent) => {
            conferenceEvent = this._fixLongSerializedIssue(conferenceEvent);
            if (this.currentSession) {
                this.currentSession.onConferenceEvent(conferenceEvent);
            }
        };

        this.onReceiveMessage = (event, msg) => {
            msg = this._fixLongSerializedIssue(msg);
            console.log('av-c', 'receive voip message ', msg);
            if ((msg.conversation.type === _model_conversationType__WEBPACK_IMPORTED_MODULE_9__["default"].Single || msg.conversation.type === _model_conversationType__WEBPACK_IMPORTED_MODULE_9__["default"].Group) && (msg.direction === 1 || msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_ACCEPT || msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_END)) {
                let content = msg.messageContent;
                if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_INPUT_EVENT) {
                    if (!self.currentSession || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                        return;
                    }
                    if (self.currentSession.conversation.type != msg.conversation.type || self.currentSession.conversation.targetId != msg.conversation.targetId) {
                        return;
                    }

                    let signal = msg.messageContent;
                    if (self.currentSession && (self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTING || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTED || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_OUTGOING)) {
                        self.onReceiveRCData(signal.data);
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_SIGNAL) {
                    if (!self.currentSession || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                        return;
                    }

                    let signal = msg.messageContent;
                    if (signal.callId !== self.currentSession.callId) {
                        self.rejectOtherCall(msg.conversation, content.callId, null, msg.messageUid);
                    } else {
                        if (self.currentSession && (self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTING || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTED || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_OUTGOING)) {
                            self.onReceiveData(msg.from, signal.payload);
                        }
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_START || msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_REQUEST) {

                    console.log('av-c', 'callstart', msg);
                    let targetIds = msg.messageContent.targetIds;
                    if (targetIds.findIndex(targetId => targetId === msg.selfUserInfo.uid) < 0) {
                        return;
                    }
                    targetIds = targetIds.filter(targetId => targetId !== msg.selfUserInfo.uid);
                    targetIds.push(msg.from);
                    if (self.currentSession && self.currentSession.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                        self.rejectOtherCall(msg.conversation, content.callId, targetIds, msg.messageUid);
                    } else {
                        self.currentSession = _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__["default"].newSession(msg.conversation, msg.from, content.callId, content.audioOnly, self.sessionCallback);
                        self.currentSession.startMsgUid = msg.messageUid;
                        self.currentSession.pin = content.pin;
                        self.currentSession.joinTime = msg.timestamp;
                        self.currentSession.callExtra = content.extra;
                        if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_REQUEST) {
                            self.currentSession.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_18__["default"].STATUS_INCOMING_REQUEST;
                            self.currentSession.videoMuted = true;
                        }
                        self.currentSession.initSession(false, msg.selfUserInfo, msg.participantUserInfos, msg.groupMemberUserInfos);
                        self.currentSession.setUserJoinTime(msg.from, msg.timestamp);
                        msg.participantUserInfos.forEach(u => {
                            self.currentSession.setUserJoinTime(u.uid, msg.timestamp);
                        });
                        self.currentSession.setUserAcceptTime(msg.from, msg.timestamp);
                        self.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_INCOMING);
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_ACCEPT || msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_ACCEPT_T) {
                    if (self.currentSession && self.currentSession.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                        if (content.callId !== self.currentSession.callId) {
                            if (msg.direction === 1) {
                                self.rejectOtherCall(msg.conversation, content.callId, [msg.selfUserInfo.uid]);
                            }
                            return;
                        } else {
                            if (msg.direction === 0 && self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_INCOMING) {
                                self.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_AcceptByOtherClient);
                                return;
                            }
                        }

                        if (self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_OUTGOING) {
                            self.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTING);
                        }
                        if (!self.currentSession.audioOnly && content.audioOnly) {
                            self.currentSession.setAudioOnly(true);
                        }
                        self.currentSession.setUserAcceptTime(msg.from, msg.timestamp);

                        let queuedMessages = self.queueOfferMessageMap.get(msg.from);
                        if (queuedMessages) {
                            queuedMessages.forEach(s => {
                                self.processSignalingMessage(msg.from, s);
                            });
                        }
                        self.queueOfferMessageMap.delete(msg.from);
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_END) {
                    if (!self.currentSession || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE || self.currentSession.callId !== content.callId) {
                        console.log('av-c', 'invalid bye message, ignore it', self.currentSession, content);
                    } else {
                        let reason = content.reason;
                        if (msg.direction === 1) {
                            switch (content.reason) {
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Unknown:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Unknown;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Busy:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteBusy;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteNetworkError;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Hangup:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_RemoteHangup;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_MediaError:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteNetworkError;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_RemoteHangup:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Hangup;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_OpenCameraFailure:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteNetworkError;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Timeout:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteTimeout;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_AcceptByOtherClient:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_AcceptByOtherClient;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_AllLeft:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_AllLeft;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteBusy:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Busy;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteTimeout:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Timeout;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteNetworkError:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomDestroyed:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomDestroyed;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomNotExist:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomNotExist;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomParticipantsFull:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RoomParticipantsFull;
                                    break;
                                case _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].Interrupted:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteInterrupted;
                                    break;
                                default:
                                    reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].RemoteNetworkError;
                                    break;
                            }
                            self.currentSession.endUserCall(msg.from, reason);
                            // } else {
                            //    self.currentSession.endCall(reason);
                        }
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_MODIFY) {
                    if (self.currentSession && self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTED && self.currentSession.callId === content.callId) {
                        if (content.audioOnly) {
                            self.currentSession.audioOnly = true;
                            self.currentSession.downgrade2Voice(true);
                        } else {
                            console.log('av-c', 'cannot modify voice call to video call');
                        }
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_Join_Call_Request) {
                    if (self.currentSession && self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTED) {
                        if (msg.messageContent.callId === self.currentSession.callId && self.currentSession.initiatorId === self.currentSession.selfUserInfo.uid) {
                            self.currentSession.inviteNewParticipants([msg.from], msg.messageContent.clientId, true);
                        }
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_ADD_PARTICIPANT) {
                    if (content.participants.indexOf(msg.selfUserInfo.uid) > -1) {

                        if (self.currentSession && self.currentSession.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                            if (self.currentSession.callId === msg.messageContent.callId) {
                                return;
                            }

                            let targets = [];
                            targets.push(...msg.messageContent.participants);
                            if (msg.messageContent.existParticipants) {
                                targets.push(...msg.messageContent.existParticipants);
                            }
                            targets.push(msg.from);
                            targets = targets.filter(uid => uid !== msg.selfUserInfo.uid);
                            self.rejectOtherCall(msg.conversation, content.callId, targets);
                            return;
                        }

                        self.currentSession = _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__["default"].newSession(msg.conversation, msg.from, content.callId, content.audioOnly, self.sessionCallback);
                        self.currentSession.pin = content.pin;
                        self.currentSession.startMsgUid = msg.messageUid;
                        let participantUserInfos = msg.participantUserInfos.filter(u => u.uid !== msg.selfUserInfo.uid);
                        self.currentSession.joinTime = msg.timestamp;
                        self.currentSession.callExtra = msg.messageContent.extra;

                        self.currentSession.initSession(false, msg.selfUserInfo, participantUserInfos, msg.groupMemberUserInfos);
                        participantUserInfos.forEach(u => {
                            self.currentSession.setUserJoinTime(u.uid, msg.timestamp);
                        });
                        self.currentSession.updateExistParticipant(content.existParticipants, msg.timestamp);
                        self.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_INCOMING);

                        if (_config_js__WEBPACK_IMPORTED_MODULE_16__["default"].ENABLE_MULTI_CALL_AUTO_JOIN && content.autoAnswer) {
                            self.currentSession.answer(content.audioOnly);
                        }
                    } else {
                        if (!self.currentSession || self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE || self.currentSession.callId !== content.callId) {
                            let targets = [];
                            targets.push(...msg.messageContent.participants);
                            if (msg.messageContent.existParticipants) {
                                targets.push(...msg.messageContent.existParticipants);
                            }
                            targets.push(msg.from);
                            targets = targets.filter(uid => uid !== msg.selfUserInfo.uid);
                            self.rejectOtherCall(msg.conversation, content.callId, targets);
                        } else {
                            let newParticipantUserInfos = msg.participantUserInfos.filter(p => {
                                return content.participants.indexOf(p.uid) > -1;
                            });
                            self.currentSession.didAddNewParticipants(content.participants, newParticipantUserInfos);

                            newParticipantUserInfos.forEach(u => {
                                self.currentSession.setUserJoinTime(u.uid, msg.timestamp);
                            });
                        }
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_CONTENT_TYPE_MUTE_VIDEO) {
                    let muteVideoMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === muteVideoMessageContent.callId && self.currentSession.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_IDLE) {
                        self.currentSession.updateVideoMute(msg.from, muteVideoMessageContent.videoMuted);
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].CONFERENCE_CONTENT_TYPE_CHANGE_MODE) {
                    let changeModeMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === changeModeMessageContent.callId) {
                        self.currentSession.onRequestChangeMode(changeModeMessageContent.audience);
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].CONFERENCE_CONTENT_TYPE_KICKOFF_MEMBER) {
                    let kickoffMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === kickoffMessageContent.callId) {
                        self.currentSession.onKickoff();
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_INVITE) {
                    let rcInviteMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === rcInviteMessageContent.callId) {
                        self.currentSession._onReceiveRemoteControlInvite();
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_ACCEPT_INVITE) {
                    let rcAcceptMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === rcAcceptMessageContent.callId) {
                        self.currentSession._didAcceptRemoteControlInvite();
                    }
                } else if (msg.messageContent.type === _messages_messageContentType__WEBPACK_IMPORTED_MODULE_3__["default"].VOIP_REMOTE_CONTROL_END) {
                    let rcEndMessageContent = msg.messageContent;
                    if (self.currentSession && self.currentSession.callId === rcEndMessageContent.callId) {
                        self.currentSession._didRemoteControlEnd(rcEndMessageContent.reason);
                    }
                }
            }
        };

        this.startCall = (event, msg) => {
            msg = this._fixLongSerializedIssue(msg);
            let conversation = msg.conversation;
            let audioOnly = msg.audioOnly;
            if (this.currentSession) {
                return;
            }
            this.currentSession = _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__["default"].newSession(conversation, msg.selfUserInfo.uid, msg.callId, audioOnly, self.sessionCallback);
            this.currentSession.pin = '';
            for (let i = 0; i < 6; i++) {
                this.currentSession.pin += Math.floor(Math.random() * 10);
            }
            this.currentSession.callExtra = msg.callExtra;
            this.currentSession.initSession(true, msg.selfUserInfo, msg.participantUserInfos, msg.groupMemberUserInfos);
            this.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_OUTGOING);

            let startCallOrRequestRCMessageContent;
            if (msg.remoteControl) {
                startCallOrRequestRCMessageContent = new _messages_rcRequestMessageContent__WEBPACK_IMPORTED_MODULE_17__["default"]();
                this.currentSession.videoMuted = true;
                this.currentSession.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_18__["default"].STATUS_OUTGOING_REQUEST;
            } else {
                startCallOrRequestRCMessageContent = new _messages_callStartMessageContent__WEBPACK_IMPORTED_MODULE_6__["default"]();
                startCallOrRequestRCMessageContent.audioOnly = audioOnly;
                startCallOrRequestRCMessageContent.extra = msg.callExtra;
                startCallOrRequestRCMessageContent.sdkType = 2;
            }

            startCallOrRequestRCMessageContent.targetIds = this.currentSession.getParticipantIds();
            startCallOrRequestRCMessageContent.callId = msg.callId;
            startCallOrRequestRCMessageContent.pin = this.currentSession.pin;

            this.currentSession.createRoom(errorCode => {
                if (errorCode === 0) {
                    this.sendSignalMessage(startCallOrRequestRCMessageContent, this.currentSession.getParticipantIds(), true, false, (error, messageUid, timestamp) => {
                        if (!self.currentSession) {
                            return;
                        }
                        if (error !== 0) {
                            this.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError);
                        } else {
                            this.currentSession.startMsgUid = messageUid;
                            console.log('av-c', 'startMsgUid', this.currentSession.startMsgUid, messageUid);
                            this.currentSession.joinTime = timestamp;
                            this.currentSession.setAcceptTime(timestamp);
                            startCallOrRequestRCMessageContent.targetIds.forEach(p => {
                                this.currentSession.setUserJoinTime(p, timestamp);
                            }, this);
                        }
                    });
                } else {
                    this.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError);
                }
            });
        };

        this.startConference = (event, msg) => {
            msg = this._fixLongSerializedIssue(msg);
            let audioOnly = msg.audioOnly;
            if (this.currentSession) {
                return;
            }
            this.currentSession = _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__["default"].newSession(null, msg.selfUserInfo.uid, msg.callId, audioOnly, self.sessionCallback);
            this.currentSession.pin = msg.pin;
            this.currentSession.host = msg.host;
            this.currentSession.title = msg.title;
            this.currentSession.desc = msg.desc;
            this.currentSession.conference = true;
            this.currentSession.defaultAudience = msg.audience;
            this.currentSession.advance = msg.advance;
            this.currentSession.record = msg.record;
            this.currentSession.extra = msg.extra;
            this.currentSession.callExtra = msg.callExtra;
            this.currentSession.videoMuted = msg.muteVideo;
            this.currentSession.audioMuted = msg.muteAudio;
            this.currentSession.initSession(true, msg.selfUserInfo, null, null, true);
            this.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_OUTGOING);

            this.currentSession.createRoom(errorCode => {
                if (errorCode !== 0) {
                    this.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError);
                }
            });
        };

        this._joinConference = (event, msg) => {
            this.joinConference(msg);
        };

        this.joinConference = msg => {
            msg = this._fixLongSerializedIssue(msg);
            if (this.currentSession) {
                return;
            }

            console.log('av-c', 'joinConference', msg);
            this.currentSession = _callSessionImpl__WEBPACK_IMPORTED_MODULE_13__["default"].newSession(null, msg.selfUserInfo.uid, msg.callId, msg.audioOnly, self.sessionCallback);
            this.currentSession.pin = msg.pin;
            this.currentSession.host = msg.host;
            this.currentSession.title = msg.title;
            this.currentSession.desc = msg.desc;
            this.currentSession.defaultAudience = msg.audience;
            this.currentSession.audience = msg.audience;

            this.currentSession.conference = true;
            this.currentSession.advance = msg.advance;
            this.currentSession.audioMuted = msg.muteAudio;
            this.currentSession.videoMuted = msg.muteVideo;
            this.currentSession.extra = msg.extra;
            this.currentSession.callExtra = msg.callExtra;
            this.currentSession.initSession(false, msg.selfUserInfo, null, null, true);
            this.currentSession.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTING);
        };

        this.onConnectionStatusChange = (event, status) => {
            self.currentSession && self.currentSession.onIMConnectionStatusChange(Number(status));
        };
    }

    setup(sessionCallback) {
        if (window && !window._log && localStorage.getItem('enable_voip_log_with_date')) {
            window._log = console.log;
            console.log = (message, ...optionalParams) => {
                window._log(new Date().toLocaleString(), message, ...optionalParams);
            };
        }
        if (this.sendMessageCallbackMap) {
            console.log('av-c', 'wfc avengine-conference, setup multi times');
        }
        console.log('av-c', 'wfc avengine-conference');
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('message', this.onReceiveMessage);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('conferenceEvent', this.onConferenceEvent);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('sendMessageResult', this.onSendMessageResult);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('sendConferenceRequestResult', this.onSendConferenceRequestResult);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('startCall', this.startCall);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('startConference', this.startConference);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('joinConference', this._joinConference);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].listenVoipEvent('connectionStatus', this.onConnectionStatusChange);

        this.sendMessageCallbackMap = new (babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2___default())();
        this.sendConferenceRequestCallbackMap = new (babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2___default())();
        this.queueOfferMessageMap = new (babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2___default())();
        this.sessionCallback = sessionCallback;
    }

    getCurrentSession() {
        return self.currentSession;
    }

    onControlInputEvent(event, options) {
        if (self.currentSession != undefined && self.currentSession.status === _engine_callState__WEBPACK_IMPORTED_MODULE_12__["default"].STATUS_CONNECTED) {
            let inputMessage = new _messages_rcInputEventMessageContent__WEBPACK_IMPORTED_MODULE_7__["default"](this.currentSession.callId, options);
            this.sendSignalMessage(inputMessage, this.currentSession.getParticipantIds(), true, false, (error, messageUid, timestamp) => {
                if (!self.currentSession) {
                    return;
                }
                if (error !== 0) {
                    this.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError);
                } else {
                    // send success
                }
            });
        }
    }

    inviteNewParticipants(newParticipants, pin, targetClientId, autoAnswer) {
        let session = self.currentSession;
        if (!session) {
            return;
        }

        let add = new _messages_addParticipantsMessageContent__WEBPACK_IMPORTED_MODULE_14__["default"]();
        add.callId = session.callId;
        add.initiator = session.selfUserInfo.uid;
        console.log('av-c', 'inviteNewParticipants', 'initiator ' + session.selfUserInfo);
        add.audioOnly = session.audioOnly;
        add.pin = pin;
        add.participants = newParticipants;
        add.existParticipants = session.getExistParticipantsStatus();
        add.autoAnswer = autoAnswer;
        add.clientId = targetClientId;

        let toUsers = [...session.getParticipantIds()];
        toUsers.push(...newParticipants);
        this.sendSignalMessage(add, toUsers, true, false, (error, messageUid, timestamp) => {
            console.log('av-c', 'send invite message success');
            if (error !== 0) {
                console.log('av-c', 'send invite message error', error);
                return;
            }
            let newParticipantUserInfos = session.groupMemberUserInfos.filter(u => newParticipants.findIndex(newParticipantId => newParticipantId === u.uid) > -1);
            console.log('av-c', 'didAddNewParticipants av', newParticipants, newParticipantUserInfos);
            session.didAddNewParticipants(newParticipants, newParticipantUserInfos);
            newParticipants.forEach(uid => {
                session.setUserJoinTime(uid, timestamp);
            });
        });
    }

    updateCallStartMessageContent(messageUid, content) {
        let message = {
            messageUid: (0,babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, messageUid),
            content
        };
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].emitToMain("update-call-start-message", message);
    }

    // TODO
    clearInviteUnreadStatus(messageUid) {}

    sendSignalMessage(msg, targetIds, keyMsg, toSelf, callback) {
        if (!self.currentSession.conversation) {
            return;
        }
        this.sendSignalMessageEx(self.currentSession.conversation, msg, targetIds, keyMsg, toSelf, callback);
    }

    sendSignalMessageEx(conversation, msg, targetIds, keyMsg, toSelf, callback) {
        if (targetIds && toSelf) {
            targetIds.push(this.currentSession.selfUserInfo.uid);
        }
        let message = {
            "conversation": JSON.parse(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default()(conversation)),
            "content": msg.encode(),
            "toUsers": targetIds
        };

        console.log('av-c', 'send signal message', msg);
        if (callback) {
            this.sendMessageId++;
            message.sendMessageId = this.sendMessageId;
            this.sendMessageCallbackMap.set(this.sendMessageId, callback);
        }
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].emitToMain("voip-message", message);
    }

    sendConferenceRequest(sessionId, roomId, request, data, callback) {
        this.sendConferenceRequestEx(sessionId, roomId, request, data, this.currentSession.advance, callback);
    }

    sendConferenceRequestEx(sessionId, roomId, request, data, advance, callback) {
        let req = {
            "sessionId": sessionId,
            "roomId": roomId,
            "request": request,
            "data": data,
            "advance": advance
        };
        if (callback) {
            this.sendConferenceRequestId++;
            req.sendConferenceRequestId = this.sendConferenceRequestId;
            this.sendConferenceRequestCallbackMap.set(this.sendConferenceRequestId, callback);
        }
        console.log('av-c', 'sendConferenceRequest', req);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].emitToMain("conference-request", req);
    }

    rejectOtherCall(conversation, callId, targetIds, startMessageUid) {
        let byeMessage = new _messages_callByeMessageContent__WEBPACK_IMPORTED_MODULE_4__["default"]();
        byeMessage.callId = callId;
        byeMessage.inviteMsgUid = startMessageUid;
        byeMessage.reason = _engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_Busy;
        console.log('av-c', 'reject other call', byeMessage, targetIds);
        this.sendSignalMessageEx(conversation, byeMessage, targetIds, false, true);
    }

    onReceiveRCData(data) {
        console.log('av-c', 'receive remote control:', data);
        _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_11__["default"].emitToMain("rc_receive_input_event", data);
    }

    onReceiveData(userId, data) {
        let signal = JSON.parse(data);
        if (!self.currentSession.getPeerConnection(userId)) {
            console.log('av-c', 'queue signal', userId, signal);
            let queuedMessages = this.queueOfferMessageMap.get(userId);
            if (!queuedMessages) {
                queuedMessages = [];
                this.queueOfferMessageMap.set(userId, queuedMessages);
            }
            if (signal.type === 'answer' || signal.type === 'offer') {
                queuedMessages.unshift(signal);
            } else {
                queuedMessages.push(signal);
            }
        } else {
            self.processSignalingMessage(userId, signal);
        }
    }

    processSignalingMessage(userId, signal) {
        console.log('av-c', "process remote signal:" + signal);
        // do nothing，会议相关的ice、sdp交换不走这了
    }

    answerCurrentCall() {
        let answerMsg = new _messages_callAnswerMessageContent__WEBPACK_IMPORTED_MODULE_5__["default"]();
        answerMsg.audioOnly = self.currentSession.audioOnly;
        answerMsg.callId = self.currentSession.callId;
        answerMsg.inviteMessageUid = self.currentSession.startMsgUid;
        this.sendSignalMessage(answerMsg, this.currentSession.getParticipantIds(), true, true, (error, messageUid, timestamp) => {
            if (error === 0) {
                this.currentSession.setAcceptTime(timestamp);
            } else {
                this.currentSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_10__["default"].REASON_SignalError);
            }
        });
    }

    // 发送视频回落到语音命令消息
    downgrade2VoiceCall() {
        let modifyMsg = new _messages_callModifyMessageContent__WEBPACK_IMPORTED_MODULE_8__["default"]();
        self.currentSession.audioOnly = true;
        modifyMsg.audioOnly = self.currentSession.audioOnly;
        modifyMsg.callId = self.currentSession.callId;

        this.sendSignalMessage(modifyMsg, this.currentSession.getParticipantIds(), true, false);
    }

}

const self = new WfcAVEngineKitImpl();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (self);

/***/ }),

/***/ "./av/internal/callSessionImpl.js":
/*!****************************************!*\
  !*** ./av/internal/callSessionImpl.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CallSessionImpl)
/* harmony export */ });
/* harmony import */ var babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-runtime/core-js/object/keys */ "./node_modules/babel-runtime/core-js/object/keys.js");
/* harmony import */ var babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js");
/* harmony import */ var babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");
/* harmony import */ var babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! babel-runtime/core-js/map */ "./node_modules/babel-runtime/core-js/map.js");
/* harmony import */ var babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../config.js */ "../../../config.js");
/* harmony import */ var _engine_callState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../engine/callState */ "../engine/callState");
/* harmony import */ var _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./avenginekitImpl */ "./av/internal/avenginekitImpl.js");
/* harmony import */ var _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../engine/callEndReason */ "../engine/callEndReason");
/* harmony import */ var _messages_callByeMessageContent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../messages/callByeMessageContent */ "../messages/callByeMessageContent");
/* harmony import */ var _subscriberImpl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./subscriberImpl */ "./av/internal/subscriberImpl.js");
/* harmony import */ var _platform_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../platform.js */ "../../../platform.js");
/* harmony import */ var _engine_callSession__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../engine/callSession */ "../engine/callSession");
/* harmony import */ var _util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../util/longUtil.js */ "../../util/longUtil.js");
/* harmony import */ var _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../engine/avenginekit */ "../engine/avenginekit");
/* harmony import */ var _model_conversationType__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../model/conversationType */ "../../model/conversationType");
/* harmony import */ var _messages_conferenceChangeModeContent__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../messages/conferenceChangeModeContent */ "../messages/conferenceChangeModeContent");
/* harmony import */ var _model_conversation__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../model/conversation */ "../../model/conversation");
/* harmony import */ var _roomErrorCode__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./roomErrorCode */ "./av/internal/roomErrorCode.js");
/* harmony import */ var _soundMeter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./soundMeter */ "./av/internal/soundMeter.js");
/* harmony import */ var _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../engine/avenginekitproxy */ "../engine/avenginekitproxy");
/* harmony import */ var _messages_muteVideoMessageContent__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../messages/muteVideoMessageContent */ "../messages/muteVideoMessageContent");
/* harmony import */ var _engine_videoProfile__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../engine/videoProfile */ "../engine/videoProfile");
/* harmony import */ var _publisherImpl__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./publisherImpl */ "./av/internal/publisherImpl.js");
/* harmony import */ var _screenSharingPublisherImpl__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./screenSharingPublisherImpl */ "./av/internal/screenSharingPublisherImpl.js");
/* harmony import */ var _model_nullUserInfo__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../model/nullUserInfo */ "../../model/nullUserInfo");
/* harmony import */ var _engine_participantProfile__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../engine/participantProfile */ "../engine/participantProfile");
/* harmony import */ var _messages_rcInviteMessageContent__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../messages/rcInviteMessageContent */ "../messages/rcInviteMessageContent");
/* harmony import */ var _messages_rcAcceptInviteMessageContent__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../messages/rcAcceptInviteMessageContent */ "../messages/rcAcceptInviteMessageContent");
/* harmony import */ var _messages_rcEndMessageContent__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../messages/rcEndMessageContent */ "../messages/rcEndMessageContent");
/* harmony import */ var _engine_rcEndReason__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../engine/rcEndReason */ "../engine/rcEndReason");
/* harmony import */ var _engine_rcState__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../engine/rcState */ "../engine/rcState");

































// 运行在新的voip window
class CallSessionImpl extends _engine_callSession__WEBPACK_IMPORTED_MODULE_12__["default"] {
    constructor(...args) {
        var _temp;

        return _temp = super(...args), this.audience = false, this.lastActiveTime = 0, this.joinTime = 0, this.acceptTime = 0, this.status = 0, this.isAllBusy = true, this.videoCamera = 'user', this.rotateAng = 0, this._isMuting = false, this._isSwitchAudience = false, this.clipboardInterval = 0, this.onVoipWindowClose = ev => {
            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteNetworkError);
            window.removeEventListener('beforeunload', this.onVoipWindowClose);
        }, this.callTimeout = () => {
            let now = new Date().valueOf();
            // console.log('av-c','check call timeout', this.status, now, numberValue(this.joinTime), numberValue(this.acceptTime));
            if (!this.callTimer) {
                this.callTimer = setInterval(this.callTimeout, 1 * 1000);
            }
            let joinTime = (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(this.joinTime);
            if (joinTime === 0) {
                return;
            }
            if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING) {
                if (now - joinTime > 60 * 1000) {
                    this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Timeout);
                    return;
                }
            } else if (this.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                if (now - joinTime > 60 * 1000) {
                    this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteTimeout);
                    return;
                }
            }

            this.subscriberMap.forEach((subscriber, userId) => {
                let lastActionTime = (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(subscriber.acceptTime, subscriber.joinTime) ? subscriber.acceptTime : subscriber.joinTime;
                if (subscriber.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED && (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(lastActionTime, 0) && now - (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(lastActionTime) > 60 * 1000) {
                    console.log('av-c', 'subscriber timeout', now, (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(subscriber.acceptTime), (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(subscriber.joinTime));
                    this.endUserCall(userId, _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteTimeout);
                }
            });
        }, this.gotRemoteStream = (userId, e) => {
            if (this.sessionCallback) {
                let p = this.getScreenSharingUserId(userId);
                this.sessionCallback.didReceiveRemoteVideoTrack(p ? p : userId, e.streams[0], p !== null);
            }
            let stream = e.streams[0];
            stream.onremovetrack = event => {
                console.log('av-c', 'pc remove remote stream', event);
                this.sessionCallback && this.sessionCallback.didRemoveRemoteVideoTrack(userId);
            };
            let subscriber = this.getSubscriber(userId);
            if (stream.getAudioTracks().length > 0) {
                let soundMeter = new _soundMeter__WEBPACK_IMPORTED_MODULE_19__.SoundMeter(window.audioContext);
                soundMeter.connectToSource(stream, err => {
                    console.log('av-c', 'connect to soundMeter', err);
                });
                subscriber.soundMeter = soundMeter;
            }
            subscriber.stream = e.streams[0];
            // this.remoteVideo.srcObject = e.streams[0];
            console.log('av-c', 'pc received remote stream', userId, e.streams[0], e.streams[0].getVideoTracks().length, e.streams[0].getAudioTracks().length);
        }, this.onIceCandidate = (userId, pc, event) => {
            if (!event.candidate) {
                return;
            }

            if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].FORCE_MEDIA_OVER_TCP) {
                return;
            }

            let obj = {};
            obj['session_id'] = this.sessionId;
            if (userId === this.selfUserInfo.uid) {
                obj['handle_id'] = this.handleId;
            } else {
                let subscriber = this.getSubscriber(userId);
                obj['handle_id'] = subscriber.handleId;
            }
            let body = {};
            body['candidate'] = event.candidate.candidate;
            body['sdpMLineIndex'] = event.candidate.sdpMLineIndex;
            body['sdpMid'] = event.candidate.sdpMid;
            body['pin'] = this.pin;
            obj['candidate'] = body;

            _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'trickle', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
                if (errorCode !== 0) {
                    console.log('av-c', 'conference request, trickle error', errorCode);
                }
            });
        }, this.onIceStateChange = (userId, pc, event) => {
            if (pc) {

                console.log('av-c', 'ICE state change event: ', userId, pc.iceConnectionState, event);
                if (pc.iceConnectionState === 'connected') {
                    if (this.selfUserInfo.uid === userId) {
                        if (!this.connectedTime) {
                            this.connectedTime = new Date().getTime();
                        }
                        this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED);
                        return;
                    } else {
                        let subscriber = this.getSubscriber(userId);
                        if (this.audience) {
                            this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED);
                        }
                        subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED;
                        if (this.sessionCallback) {
                            let p = this.getScreenSharingUserId(userId);
                            this.sessionCallback.didParticipantConnected(p ? p : userId, p !== null);
                        }
                    }
                }
                //type RTCIceConnectionState = "checking" | "closed" | "completed" | "connected" | "disconnected" | "failed" | "new";
                if (pc.iceConnectionState === 'disconnected') {
                    // 可能会自动恢复，如果不能恢复，会走到 failed
                    // this.endUserCall(userId, CallEndReason.REASON_MediaError);
                } else if (pc.iceConnectionState === 'failed') {
                    console.log('av-c', 'iceConnectionState failed, endCall');
                    // this.endUserCall(userId, CallEndReason.REASON_MediaError);
                }
            }
        }, this.bytesPrev = 0, this.timestampPrev = 0, this.requestArray = [], this._lastLocalClipboardText = '', this._lastRemoteClipboardText = '', this._listenDocumentOnFocus = () => {
            if (_platform_js__WEBPACK_IMPORTED_MODULE_11__.clipboard) {
                // electron 不需要
                return;
            }
            if (this._lastRemoteClipboardText) {
                navigator.clipboard.writeText(this._lastRemoteClipboardText).then(text => {
                    this._lastRemoteClipboardText = '';
                }).catch(reason => {
                    // do nothing
                });
            }
        }, _temp;
    }

    //当所有参与者都是因为忙 而挂断的话，发起方最后一个endCall回调的reason也是忙


    static newSession(conversation, initiatorId, callId, audioOnly, sessionCallback) {
        console.log('av-c', 'newSession');
        let session = new CallSessionImpl();
        session.conversation = conversation;
        session.initiatorId = initiatorId;
        session.callId = callId;
        session.audioOnly = audioOnly;
        session.sessionCallback = sessionCallback;
        window.__callSession = session;
        return session;
    }

    getParticipantIds() {
        let ids = [];
        for (const [userId, subscriber] of this.subscriberMap) {
            ids.push(userId);
        }
        return ids;
    }

    setAcceptTime(timestamp) {
        if (!this.acceptTime) {
            this.acceptTime = timestamp;
        }
        this.updateInitiator();
    }

    setUserAcceptTime(userId, timestamp) {
        console.log('av-c', 'setUserAcceptTime', userId, timestamp);
        let subscriber = this.getSubscriber(userId);
        // 当接听方接听很慢，发起方已经超时，把该接听方踢出去之后，才收到该接听方的接听消息时，subscriber已经被清了
        if (!subscriber) {
            console.error('av-c', 'setUserAcceptTime undefined', userId, this.status, this.subscriberMap);
            return;
        }
        subscriber.acceptTime = timestamp;
    }

    setUserJoinTime(userId, timestamp) {
        let subscriber = this.getSubscriber(userId);
        subscriber.joinTime = timestamp;
    }

    getSubscriber(userId, screenSharing) {
        if (screenSharing) {
            userId = 'screen_sharing_' + userId;
        }
        return this.subscriberMap.get(userId);
    }

    getParticipantProfiles() {
        let profiles = [];
        for (const s of this.subscriberMap.values()) {
            let p = new _engine_participantProfile__WEBPACK_IMPORTED_MODULE_26__["default"]();
            p.userId = s.userId;
            p.status = s.status;
            p.joinTime = s.joinTime;
            p.acceptTime = s.acceptTime;
            p.audioMuted = s.audioMuted;
            p.videoMuted = s.videoMuted;
            p.audience = s.audience;
            profiles.push(p);
        }
        return profiles;
    }

    getSelfProfile() {
        let p = new _engine_participantProfile__WEBPACK_IMPORTED_MODULE_26__["default"]();
        p.userId = this.userId;
        p.status = this.status;
        p.joinTime = this.joinTime;
        p.acceptTime = this.acceptTime;
        p.audioMuted = this.audioMuted;
        p.videoMuted = this.videoMuted;
        p.audience = this.audience;
        return p;
    }

    getPeerConnection(userId) {
        let subscriber = this.subscriberMap.get(userId);
        return subscriber.peerConnection;
    }

    answer(audioOnly, callExtra) {
        this._answer(audioOnly, callExtra);
    }

    acceptRemoteControlRequest() {
        this._answer(false, '');
    }

    _answer(audioOnly, callExtra) {
        if (this.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING) {
            return;
        }
        // 不能语音电话来了，视频接听
        this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTING);
        if (this.audioOnly && !audioOnly) {
            audioOnly = true;
        }

        this.audioOnly = audioOnly;
        this.callExtra = callExtra;
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].answerCurrentCall();
    }

    setState(status) {
        if (this.status === status) {
            // if (status === CallState.STATUS_CONNECTED && this.sessionCallback) {
            //     this.sessionCallback.didChangeState(status);
            // }
            return;
        }
        if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED && status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTING) {
            return;
        }

        this.status = status;
        console.log('av-c', 'set status', status, this.startMsgUid);

        if (status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE || status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
            if (this.startMsgUid) {
                let content = {
                    audioOnly: this.audioOnly
                };
                content.status = this.endReason ? this.endReason : 0;
                if (status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                    content.connectTime = new Date().getTime();
                    this.startTime = content.connectTime;
                } else {
                    content.endTime = new Date().getTime();
                }
                _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].updateCallStartMessageContent(this.startMsgUid, content);
            }
            if (status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                if (this.conference) {
                    this.notifyMuteState();
                } else {
                    if (!this.audioOnly && this.videoMuted) {
                        this.sendMuteVideoMessage();
                    }
                }

                if (this.rcStatus === _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_INCOMING_REQUEST || this.rcStatus === _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_OUTGOING_REQUEST) {
                    this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED;
                    this._readClipboard();
                    this._listenDocumentOnFocus();
                }
            } else {
                this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_IDLE;
            }
            if (status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
                clearInterval(this.clipboardInterval);
            }
        } else if (status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTING) {
            // TODO 处理未接听超时
            this.joinAndPublish();
        }

        if (this.sessionCallback) {
            this.sessionCallback.didChangeState(status);
        }
    }

    /**
     *
     * @param moCall
     * @param selfUserInfo
     * @param participantUserInfos
     * @param groupMemberUserInfos 群成员信息，群里发起多人音视频时，才有效
     * @param isConference 是否是会议
     */
    initSession(moCall, selfUserInfo, participantUserInfos = [], groupMemberUserInfos = [], isConference = false) {
        this.moCall = moCall;
        this.selfUserInfo = selfUserInfo;
        this.participantUserInfos = participantUserInfos;
        this.singleCall = participantUserInfos && participantUserInfos.length === 1;
        this.groupMemberUserInfos = groupMemberUserInfos;
        let initiatorUserInfo = selfUserInfo;
        if (!moCall && participantUserInfos && participantUserInfos.length > 0) {
            initiatorUserInfo = participantUserInfos.filter(u => u.uid === this.initiatorId)[0];
        }

        this.sessionCallback.onInitial(this, selfUserInfo, initiatorUserInfo, participantUserInfos, groupMemberUserInfos);

        let participants = [];
        if (participantUserInfos && participantUserInfos.length > 0) {
            participantUserInfos.forEach(u => {
                participants.push(u.uid);
            });
        }
        this.initSubscriberMap(participants);

        if (!isConference) {
            if (moCall) {
                this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_OUTGOING);
                this.startPreview(this.audioOnly);
            } else {
                this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING);
                this.playIncomingRing();
            }
        }
        this.callTimeout();

        window.AudioContext = window.AudioContext || window.webkitAudioContext;
        window.audioContext = new AudioContext();
        // pls refer to https://stackoverflow.com/questions/52448909/onbeforeunload-not-working-inside-react-component
        // In react, if you need to handle DOM events not already provided by React you have to add DOM listeners after the component is mounted
        // 所以这儿延时一下
        setTimeout(() => {
            window.addEventListener('beforeunload', this.onVoipWindowClose);
        }, 500);
        this.soundMeterTimer = setInterval(() => {

            if (!this.sessionCallback) {
                return;
            }

            // volume
            let soundMeter = this.cameraPublisher && this.cameraPublisher.soundMeter;
            if (soundMeter) {
                let instant = soundMeter.instant.toFixed(2);
                let slow = soundMeter.slow.toFixed(2);
                let clip = soundMeter.clip;
                this.sessionCallback.didReportAudioVolume(this.selfUserInfo.uid, Number(instant));
            }
            this.subscriberMap.forEach((subscriber, userId) => {
                if (!subscriber.soundMeter) {
                    return;
                }
                let instant = subscriber.soundMeter.instant.toFixed(2);
                let slow = subscriber.soundMeter.slow.toFixed(2);
                let clip = subscriber.soundMeter.clip;
                this.sessionCallback.didReportAudioVolume(userId, Number(instant));
            });
        }, 100);

        if (localStorage.getItem('enable_voip_debug')) {
            this.pcStatsTimer = setInterval(() => {
                // video muted
                this.subscriberMap.forEach((client, userId) => {
                    let pc = client.peerConnection;
                    if (!pc) {
                        return;
                    }
                    pc.getStats().then(stats => {
                        this.showRemoteStats(userId, stats);
                    });
                });
            }, 1000);
        }
    }

    // TODO delta


    initSubscriberMap(participants) {
        console.log('av-c', 'initParticipantClientMap', participants);
        if (!this.subscriberMap) {
            this.subscriberMap = new (babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_3___default())();
        }
        if (!participants || participants.length < 1) {
            return;
        }
        participants.forEach(uid => {
            let subscriber = new _subscriberImpl__WEBPACK_IMPORTED_MODULE_10__["default"](uid, this);
            subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING;
            this.subscriberMap.set(uid, subscriber);
        }, this);
    }

    // PC/Web端邀请新的会话对象时调用
    inviteNewParticipants(newParticipantIds, targetClientId, autoAnswer) {
        if (!newParticipantIds.length) {
            return;
        }
        newParticipantIds = newParticipantIds.filter(uid => {
            return uid !== this.selfUserInfo.uid && this.participantUserInfos.findIndex(u => u.uid === uid) < 0;
        });
        if (!newParticipantIds.length) {
            return;
        }

        this.singleCall = false;
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].inviteNewParticipants(newParticipantIds, this.pin, targetClientId, autoAnswer);
    }

    getExistParticipantsStatus() {
        let statuses = [];
        statuses.push({
            userId: this.selfUserInfo.uid,
            acceptTime: this.acceptTime ? (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(this.acceptTime) : 0,
            joinTime: this.joinTime ? (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(this.joinTime) : 0,
            videoMuted: this.videoMuted
        });

        this.participantUserInfos.forEach(u => {
            let subscriber = this.getSubscriber(u.uid);
            statuses.push({
                userId: subscriber.userId,
                acceptTime: subscriber.acceptTime ? (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(subscriber.acceptTime) : 0,
                joinTime: subscriber.joinTime ? (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.numberValue)(subscriber.joinTime) : 0,
                videoMuted: subscriber.videoMuted
            });
        }, this);
        return statuses;
    }

    didAddNewParticipants(newParticipants, newParticipantUserInfos) {
        newParticipants.forEach(id => {
            let index = newParticipantUserInfos.findIndex(u => u.uid === id);
            if (index === -1) {
                newParticipantUserInfos.push(new _model_nullUserInfo__WEBPACK_IMPORTED_MODULE_25__["default"](id));
            }
        });
        console.log('av-c', 'didAddNewParticipants', newParticipants, newParticipantUserInfos);
        newParticipants.forEach(p => {
            let subscriber = new _subscriberImpl__WEBPACK_IMPORTED_MODULE_10__["default"](p, this);
            subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING;
            this.subscriberMap.set(p, subscriber);
        }, this);

        newParticipantUserInfos.forEach(u => {
            this.participantUserInfos.push(u);
            this.sessionCallback && this.sessionCallback.didParticipantJoined(u.uid, false);
        }, this);
    }

    updateExistParticipant(existParticipants, joinTime) {
        existParticipants.forEach(p => {
            let subscriber = this.getSubscriber(p.userId);
            subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING;
            subscriber.joinTime = joinTime;
            subscriber.videoMuted = p.videoMuted;
            subscriber.acceptTime = p.acceptTime;
        });
    }

    updateVideoMute(userId, videoMuted) {
        let subscriber = this.getSubscriber(userId);
        if (subscriber && subscriber.videoMuted !== videoMuted) {
            subscriber.videoMuted = videoMuted;
            this.sessionCallback && this.sessionCallback.didVideoMuted(userId, videoMuted);
        }
    }

    defaultVideoConstraints(audioOnly) {
        let constraints;
        if (audioOnly) {
            constraints = {
                audio: {
                    echoCancellation: true,
                    noiseSuppression: true,
                    autoGainControl: true
                },
                video: false
            };
        } else {
            let vp = _engine_videoProfile__WEBPACK_IMPORTED_MODULE_22__["default"].getVideoProfile(_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].VIDEO_PROFILE);
            constraints = {
                audio: {
                    echoCancellation: true,
                    noiseSuppression: true,
                    autoGainControl: true
                },
                video: {
                    width: { ideal: vp.width },
                    height: { ideal: vp.height },
                    frameRate: { ideal: vp.fps }
                }
            };
        }

        if (this.audioInputDeviceId) {
            constraints.audio.deviceId = this.audioInputDeviceId;
        }
        if (!audioOnly) {
            if (this.videoInputDeviceId) {
                constraints.video.deviceId = this.videoInputDeviceId;
            } else {
                constraints.video.facingMode = this.videoCamera;
            }
        }
        console.log('av-c', 'camera stream constraints', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(constraints));

        return constraints;
    }

    createLocalCameraVideoStream(audioOnly, callback = true) {
        var _this = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            try {
                console.log('av-c', 'createLocalCameraVideoStream', audioOnly);
                const stream = yield navigator.mediaDevices.getUserMedia(_this.defaultVideoConstraints(audioOnly));
                console.log('av-c', 'Received local stream', stream, stream.getVideoTracks().length, audioOnly);
                if (callback && _this.sessionCallback && !_this.videoMuted) {
                    _this.sessionCallback.didCreateLocalVideoTrack(stream, false);
                }

                const videoTracks = stream.getVideoTracks();
                if (!audioOnly) {
                    if (videoTracks && videoTracks.length > 0) {
                        console.log('av-c', `Using video device: ${videoTracks[0].label}`);
                    }
                } else {
                    if (videoTracks && videoTracks.length > 0) {
                        console.log('av-c', 'audioOnly, stop video track');
                        videoTracks.forEach(function (track) {
                            return track.stop();
                        });
                    }
                }

                const audioTracks = stream.getAudioTracks();
                if (audioTracks.length > 0) {
                    console.log('av-c', `Using audio device: ${audioTracks[0].label}`);
                }

                return stream;
            } catch (e) {
                console.error('av-c', 'getUserMedia error', e);
            }
            console.log('av-c', 'createLocalCameraVideoStream failed');
            return null;
        })();
    }

    startPreview(audioOnly) {
        var _this2 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            console.log('av-c', 'start preview');
            if (_this2.conference && _this2.audience) {
                return;
            }
            _this2.previewStream = yield _this2.createLocalCameraVideoStream(audioOnly);
            if (!_this2.previewStream) {
                _this2.previewStream = yield _this2.createDummyVideoStream();
            }
            if (!_this2.previewStream) {
                _this2.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_MediaError);
            }
            if (_this2.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
                _this2.endMedia();
            }
        })();
    }

    /**
     * @param {[string]} 源类型，可选screen、window
     * @return {Promise<DesktopCapturerSource[]>}
     */
    getDesktopSources(types) {
        // if (desktopCapturer) {
        //     return desktopCapturer.getSources({types: types});
        // }
        return null;
    }

    /**
     *
     * @param desktopShareOptions {          sourceId: source.id,
                                        minWidth: 1280,
                                        maxWidth: 1280,
                                        idealWidth: 1280,
                                        minHeight: 720,
                                        maxHeight: 720,
                                        idealHeight: 720,
                                        frameRate: 15,
                                        }
     * @return {Promise<void>}
     */
    startScreenShare(desktopShareOptions) {
        var _this3 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            if (_this3.isScreenSharing() || _this3.audioOnly) {
                return;
            }

            console.log('av-c', 'start screen share');
            // if(!this.screenShareStream){
            if (_platform_js__WEBPACK_IMPORTED_MODULE_11__.currentWindow) {
                _this3.screenShareStream = yield navigator.mediaDevices.getUserMedia({
                    audio: false,
                    video: {
                        mandatory: (0,babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
                            chromeMediaSource: 'desktop'
                        }, desktopShareOptions)
                    }
                });
                console.log('av-c', 'screen share stream', _this3.screenShareStream);
            } else {
                console.log('av-c', 'await screenShareStream');
                let videoConstraints = {};
                if (desktopShareOptions) {
                    videoConstraints = {
                        height: {
                            max: desktopShareOptions.maxHeight,
                            min: desktopShareOptions.minHeight,
                            ideal: desktopShareOptions.idealHeight
                        },
                        width: {
                            max: desktopShareOptions.maxWidth,
                            min: desktopShareOptions.minWidth,
                            ideal: desktopShareOptions.idealWidth
                        },
                        frameRate: desktopShareOptions.frameRate
                    };
                }
                _this3.screenShareStream = yield navigator.mediaDevices.getDisplayMedia({ audio: false, video: videoConstraints });
                console.log('av-c', 'screenShareStream', _this3.screenShareStream);
            }
            // }

            _this3.screenSharing = true;
            if (_this3.sessionCallback) {
                _this3.sessionCallback.didCreateLocalVideoTrack(_this3.screenShareStream, true);
            }

            _this3.screenShareStream.getVideoTracks()[0].addEventListener('ended', function () {
                _this3.stopScreenShare();
            });

            if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].SCREEN_SHARING_REPLACE_MODE) {
                if (_this3.cameraPublisher.videoSender) {
                    yield _this3.cameraPublisher.videoSender.replaceTrack(_this3.screenShareStream.getVideoTracks()[0]);
                    if (!_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].DISABLE_DUAL_STREAM) {
                        let smallScreenVideoTrack = _this3.screenShareStream.getVideoTracks()[0].clone();
                        // let constraints = this.cameraPublisher.tinyVideoTrackConstraints(smallScreenVideoTrack);
                        // await smallScreenVideoTrack.applyConstraints(constraints)
                        yield _this3.cameraPublisher.smallVideoSender.replaceTrack(smallScreenVideoTrack);
                    }
                    _this3.cameraPublisher.stopVideoTrack(_this3.cameraPublisher.cameraVideoStream);
                } else {
                    console.error('av-c', 'screen share error, publisher.videoSender is null');
                }
                _this3.notifyMuteState();
            } else {
                _this3.screenSharingPublisher = new _screenSharingPublisherImpl__WEBPACK_IMPORTED_MODULE_24__["default"](_this3);
                _this3.screenSharingPublisher.attachAndPublishScreenSharing();
            }
        })();
    }

    isScreenSharing() {
        return !!this.screenShareStream;
    }

    stopScreenShare() {
        var _this4 = this;

        console.log('av-c', 'stopScreenShare');
        if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].SCREEN_SHARING_REPLACE_MODE) {
            this.cameraPublisher.stopVideoStream(this.screenShareStream);
            this.screenShareStream = null;
            this.screenSharing = false;
            if (!this.videoMuted) {
                // 置为空，以便重新创建stream
                // 不在开始屏幕共享的时候置为空，是因为还需要音频流，且需要开关静音
                (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
                    // 重新创建
                    _this4.cameraPublisher.cameraVideoStream = null;
                    yield _this4.cameraPublisher.createMediaSenders();
                    if (_this4.sessionCallback) {
                        _this4.sessionCallback.didCreateLocalVideoTrack(_this4.cameraPublisher.cameraVideoStream, false);
                    }
                })();
            } else {
                this.notifyMuteState();
            }
        } else {
            if (this.screenSharingPublisher) {
                this.screenSharingPublisher.stopVideoStream(this.screenShareStream);
                this.screenSharingPublisher.unPublishMedia();
                this.screenSharingPublisher.deattach();
                this.screenSharingPublisher = null;
                if (this.sessionCallback) {
                    this.sessionCallback.didParticipantLeft(this.selfUserInfo.uid, _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Hangup, true);
                    if (this.cameraPublisher && this.cameraPublisher.cameraVideoStream && !this.videoMuted && !this.audioMuted) {
                        this.sessionCallback.didCreateLocalVideoTrack(this.cameraPublisher.cameraVideoStream, false);
                    }
                }
            }
            this.screenShareStream = null;
            this.screenSharing = false;
        }

        this.sessionCallback && this.sessionCallback.didScreenShareEnded();
    }

    createPeerConnection(userId, isInitiator) {
        let configuration = this.getSelectedSdpSemantics();
        console.log('xxxxx av-c', 'RTCPeerConnection configuration:', userId, configuration);

        if (_config_js__WEBPACK_IMPORTED_MODULE_5__["default"].ICE_SERVERS && _config_js__WEBPACK_IMPORTED_MODULE_5__["default"].ICE_SERVERS.length) {
            configuration.iceServers = [];
            for (const server of _config_js__WEBPACK_IMPORTED_MODULE_5__["default"].ICE_SERVERS) {
                configuration.iceServers.push({
                    credential: server[2],
                    credentialType: 'password',
                    urls: server[0],
                    username: server[1]
                });
            }
        }

        let forceRelay = _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].FORCE_RELAY;
        if (forceRelay === undefined) {
            forceRelay = _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].FORCE_REPLAY;
        }
        if (forceRelay) {
            console.log('av-c', 'force relay', configuration.iceServers.length);
            configuration.iceTransportPolicy = 'relay';
        }

        let pc = new RTCPeerConnection(configuration);
        if (userId !== this.selfUserInfo.uid) {
            let subscriber = this.getSubscriber(userId);
            subscriber.peerConnection = pc;
            subscriber.isInitiator = isInitiator;
        }

        console.log('av-c', 'Created local peer connection object pc');
        pc.addEventListener('icecandidate', e => this.onIceCandidate(userId, pc, e));

        pc.addEventListener('iceconnectionstatechange', e => this.onIceStateChange(userId, pc, e));
        pc.addEventListener('track', e => this.gotRemoteStream(userId, e));
        pc.addEventListener('connectionstatechange', e => this.onConnectionStateChange(userId, pc, e));

        console.log('av-c', 'createPeerConnection', userId, this.getSubscriber(userId));

        return pc;
    }

    getSelectedSdpSemantics() {
        // const sdpSemanticsSelect = document.querySelector('#sdpSemantics');
        // const option = sdpSemanticsSelect.options[sdpSemanticsSelect.selectedIndex];
        // return option.value === '' ? {} : { sdpSemantics: option.value };
        //            rtcConfig.enableDtlsSrtp = true;
        return {
            bundlePolicy: 'max-bundle'
        };
    }

    onConnectionStateChange(userId, pc, event) {
        console.log('av-c', 'onConnectionStateChange', userId, pc, event);
        if (pc.connectionState === 'failed') {
            // console.log('av-c','pc connectionState failed, endCall')
            // this.endUserCall(userId, CallEndReason.REASON_MediaError);
        }
    }

    hangup() {
        console.log('av-c', 'Ending call');
        this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Hangup);
    }

    setAudioOnly(audioOnly) {
        this.audioOnly = audioOnly;
        if (this.conference) {
            return;
        }

        if (this.sessionCallback) {
            this.sessionCallback.didChangeMode(audioOnly);
        }
    }

    // 回落到语音
    downgrade2Voice(inDirection = false) {
        if (this.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
            return;
        }

        this.cameraPublisher.stopVideoTrack(this.cameraPublisher.cameraVideoStream);
        if (!inDirection) {
            _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].downgrade2VoiceCall();
        }
        this.setAudioOnly(true);
    }

    // 语音接听
    downToVoice() {
        console.log('av-c', 'down to voice');
        this.stopIncomingRing();
        if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_INCOMING) {
            this.setAudioOnly(true);
            this.answerCall(true);
            return;
        }

        if (this.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
            return;
        }

        if (this.audioOnly) {
            return;
        }
        this.setAudioOnly(true);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].downgrade2VoiceCall();
    }

    muteVideo(mute) {
        var _this5 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            return yield _this5.setVideoEnabled(!mute);
        })();
    }

    setVideoEnabled(enable) {
        var _this6 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            if (_this6.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                console.error('av-c', 'connecting, can not muteVideo');
                return false;
            }

            // if (this.cameraPublisher){
            //     console.log('av-c','setVideoEnabled error, only audio stream')
            //     return false;
            // }

            if (_this6.videoMuted === !enable) {
                console.log('av-c', 'setVideoEnabled error', _this6.videoMuted, enable);
                return false;
            }

            if (_this6.audioOnly || _this6.isScreenSharing() && _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].SCREEN_SHARING_REPLACE_MODE) {
                console.log('av-c', 'setVideoEnabled error audioOnly, or (isScreenSharing and replace mode)');
                return false;
            }

            if (_this6._isMuting) {
                console.log('av-c', 'mute operation is still in progress');
                return false;
            }

            _this6.videoMuted = !enable;

            console.log('av-c', `setVideoEnabled ${enable}, audience ${_this6.audience}`);

            if (_this6.audience) {
                return true;
            }

            _this6._isMuting = true;
            // let stream = this.mediaStream();
            // if (!stream && !enable) {
            //     return;
            // }
            if (!enable) {
                _this6.cameraPublisher && _this6.cameraPublisher.stopVideoTrack(_this6.cameraPublisher.cameraVideoStream);
            } else {
                if (!_this6.cameraPublisher) {
                    _this6.cameraPublisher = new _publisherImpl__WEBPACK_IMPORTED_MODULE_23__["default"](_this6);
                    _this6.cameraPublisher.handleId = _this6.handleId;
                }
                // videotrack stop 之后，不能恢复，只能重建
                _this6.cameraPublisher.stopVideoStream(_this6.cameraPublisher.cameraVideoStream);
                _this6.cameraPublisher.cameraVideoStream = null;
                yield _this6.cameraPublisher.createMediaSenders();
            }
            if (_this6.conference) {
                _this6.notifyMuteState();
            } else {
                _this6.sendMuteVideoMessage();
            }
            _this6.sessionCallback && _this6.sessionCallback.didMuteStateChanged([_this6.selfUserInfo.uid]);
            console.log('av-c', 'mute video end');
            _this6._isMuting = false;
            return true;
        })();
    }

    sendMuteVideoMessage() {
        let content = new _messages_muteVideoMessageContent__WEBPACK_IMPORTED_MODULE_21__["default"]();
        content.callId = this.callId;
        content.videoMuted = this.videoMuted;
        content.existParticipants = this.getExistParticipantsStatus();
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessage(content, this.getParticipantIds(), true, false);
    }

    muteAudio(mute) {
        var _this7 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            return yield _this7.setAudioEnabled(!mute);
        })();
    }

    setAudioEnabled(enable) {
        var _this8 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            if (_this8.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                console.error('av-c', 'connecting, can not muteAudio');
                return false;
            }
            if (_this8.audioMuted === !enable) {
                return false;
            }

            if (_this8._isMuting) {
                console.log('av-c', 'mute operation is still in progress');
                return false;
            }

            _this8.audioMuted = !enable;
            if (_this8.audience) {
                return true;
            }
            _this8._isMuting = true;

            console.log('av-c', 'setAudioEnabled', enable);
            if (!enable) {
                _this8.cameraPublisher && _this8.cameraPublisher.stopAudioTrack(_this8.cameraPublisher.cameraVideoStream);
            } else {
                if (!_this8.cameraPublisher || !_this8.cameraPublisher.cameraVideoStream) {
                    _this8.cameraPublisher = new _publisherImpl__WEBPACK_IMPORTED_MODULE_23__["default"](_this8);
                    _this8.cameraPublisher.handleId = _this8.handleId;
                    yield _this8.cameraPublisher.createMediaSenders();
                } else {
                    _this8.cameraPublisher.cameraVideoStream.getTracks().forEach(function (track) {
                        if (track.kind === 'audio') {
                            track.enabled = true;
                        }
                    });
                }
            }
            if (_this8.conference && _this8.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                _this8.notifyMuteState();
                _this8.sessionCallback && _this8.sessionCallback.didMuteStateChanged([_this8.selfUserInfo.uid]);
            }
            console.log('av-c', 'mute audio end');
            _this8._isMuting = false;
            return true;
        })();
    }

    forceEndMedia() {
        this.endMedia();
    }

    endMedia() {
        console.log('av-c', 'Ending media');
        this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE);
        this.stopIncomingRing(); //可能没有接听就挂断了

        this.cameraPublisher && this.cameraPublisher.endMedia();
        this.screenSharingPublisher && this.screenSharingPublisher.endMedia();
        if (this.previewStream) {
            console.log('av-c', 'stop previewStream');
            const stream = this.previewStream;
            this.previewStream = null;
            if (typeof stream.getTracks === 'undefined') {
                // Support legacy browsers, like phantomJs we use to run tests.
                stream.stop();
            } else {
                stream.getTracks().forEach(track => {
                    console.log('av-c', 'stop preview track', track.kind, track.id);
                    track.stop();
                });
            }
        }
    }

    endUserCall(userId, reason) {
        console.log('av-c', 'endUserCall', userId, reason);
        if (userId === this.selfUserInfo.uid) {
            this.endCall(reason);
            return;
        }

        // 发起者挂断电话
        // 1. 如果还没有任何参与者接听电话，整体挂断
        // 2. 如果已经有参与者接听电话，不整体挂断，只是发起者离开通话
        if (!this.conference && userId === this.initiatorId) {
            let accepted = false;
            for (const [uid, subscriber] of this.subscriberMap) {
                console.log('av-c', 'endUserCall acceptTime', subscriber.acceptTime);
                if (subscriber.acceptTime && (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(subscriber.acceptTime, 0) && userId !== uid) {
                    accepted = true;
                    break;
                }
            }
            accepted = accepted || this.acceptTime && this.acceptTime && (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(this.acceptTime, 0);
            if (!accepted) {
                this.endCall(reason);
                return;
            }
        }

        let subscriber = this.getSubscriber(userId);
        this.subscriberMap.delete(userId);
        if (this.participantUserInfos) {
            this.participantUserInfos = this.participantUserInfos.filter(info => info.uid !== userId);
        }
        if (subscriber) {
            if (subscriber.peerConnection) {
                const senders = subscriber.peerConnection.getSenders();
                senders.forEach(sender => subscriber.peerConnection.removeTrack(sender));
                subscriber.peerConnection.close();

                subscriber.peerConnection = null;
            }
            if (userId === this.initiatorId) {
                this.updateInitiator();
            }
            if (this.sessionCallback) {
                let p = this.getScreenSharingUserId(userId);
                this.sessionCallback.didParticipantLeft(p ? p : userId, reason, p !== null);
            }
        }

        this.isAllBusy = this.isAllBusy && reason === _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteBusy;

        if (!this.conference && this.subscriberMap.size === 0) {
            if (this.conversation.type === 0 || this.singleCall) {
                this.endCall(reason);
            } else {
                this.endCall(this.isAllBusy ? _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteBusy : _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_AllLeft);
            }
        }
    }

    leaveConference(destroyRoom) {
        if (this.conference) {
            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Hangup, destroyRoom);
        } else {
            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Hangup);
        }
    }

    endCall(reason, destroyRoom) {
        console.log('av-c', 'endCall ---- ', reason, new Error().stack);
        this.endReason = reason;
        if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
            return;
        }

        this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE);

        if (!this.conference) {
            if (reason !== _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_AcceptByOtherClient && reason !== _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_AllLeft) {
                if (this.getParticipantIds().length > 0) {
                    let byeMessage = new _messages_callByeMessageContent__WEBPACK_IMPORTED_MODULE_9__["default"]();
                    byeMessage.callId = this.callId;
                    byeMessage.inviteMsgUid = this.startMsgUid;
                    byeMessage.reason = reason;
                    _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessage(byeMessage, this.getParticipantIds(), false, true);
                }
            }
        }

        if (reason !== _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_AcceptByOtherClient) {
            let obj = {};
            // if (destroyRoom || reason == AllLeft || (conversation != null && conversation.type == Conversation.ConversationType.Single && (reason == RemoteBusy || reason == RemoteHangup || reason == RemoteTimeout))) {
            //     jsonObject.put("destroy", false);
            //

            obj['handle_id'] = this.handleId;

            if (destroyRoom || reason === _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_AllLeft || this.conversation && this.conversation.type === _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && [_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteBusy, _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_RemoteHangup, _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RemoteTimeout].indexOf(reason) > -1) {
                obj['destroy'] = true;
            }

            console.log('av-c', 'leave', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj));
            _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'leave', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
                if (errorCode !== 0) {
                    console.log('av-c', 'conference request, leave error', errorCode);
                }
            });
        }

        let tmpSession = {
            callId: this.callId,
            audioOnly: this.audioOnly,
            pin: this.pin,
            host: this.host,
            title: this.title,
            desc: this.desc,
            audience: this.audience,
            advance: this.advance
        };
        this.keepAlive(false);
        // this.callId = null;
        // this.sessionId = 0;
        // this.handleId = 0;
        // this.pin = null;
        // this.audience = false;

        this.endTime = new Date().valueOf();

        for (const [userId, subscriber] of this.subscriberMap) {
            if (subscriber.peerConnection) {
                subscriber.peerConnection.close();
                subscriber.peerConnection = null;
            }
        }

        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].currentSession = null;
        clearInterval(this.callTimer);
        clearInterval(this.soundMeterTimer);
        if (this.pcStatsTimer) {
            clearInterval(this.pcStatsTimer);
        }
        this.endMedia();
        this.sessionCallback && this.sessionCallback.didCallEndWithReason(reason);
    }

    defaultPublishMediaConstraints() {
        let options = {
            offerToReceiveAudio: false,
            offerToReceiveVideo: false
        };
        return options;
    }

    defaultSubscribeMediaConstraints() {
        let options = {
            offerToReceiveAudio: true,
            offerToReceiveVideo: true
        };
        return options;
    }

    restartPublishConstrains() {
        let options = {
            iceRestart: true,
            offerToReceiveAudio: false,
            offerToReceiveVideo: false
        };
        return options;
    }

    createRoom(callback) {
        let obj = {};
        obj['participants'] = 9;
        obj['pin'] = this.pin;
        obj['publishers'] = this.audioOnly ? _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].MAX_AUDIO_PARTICIPANT_COUNT : _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].MAX_VIDEO_PARTICIPANT_COUNT;
        if (!this.conference) {
            obj['is_private'] = true;
        }
        if (this.record) {
            obj['record'] = true;
        }
        console.log('av-c', 'create room');
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'create_room', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
            console.log('av-c', 'create_room res', errorCode, res);
            if (errorCode !== 0) {
                callback(errorCode);
                return;
            }
            let result = JSON.parse(res);
            this.sessionId = result['session_id'];
            this.handleId = result['handle_id'];
            let data = result['data'];
            if (this.callId !== data['room']) {
                // TODO
            }
            this.keepAlive(true);
            callback(0);
            if (this.conference) {
                this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTING);
            }
        });
    }

    onConferenceEvent(event) {
        let obj;
        if (typeof event === "string") {
            obj = JSON.parse(event);
        } else {
            obj = event;
        }
        console.log('av-c', 'onConferenceEvent', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(event));

        if (this.sessionId !== obj['session_id']) {
            console.log('av-c', 'on conference event, unknown sessionId', this.sessionId, obj['session_id']);
            return;
        }

        // 忽略自己屏幕共享通道的事件通知
        let sender = obj['sender'];
        if (sender > 0 && this.screenSharingPublisher && this.screenSharingPublisher.handleId === sender) {
            return;
        }

        let data = obj['data'];
        let videoRoom = data ? data['videoroom'] : null;
        if ('event' === videoRoom) {
            let publishers = data['publishers'];
            this.onPublish(publishers);

            let unpublished = data['unpublished'];
            if (unpublished) {
                this.onUnpublish(unpublished);
            }

            let leaving = data['leaving'];
            if (leaving) {
                if (leaving === 'ok' && 'kicked' === data['reason']) {
                    this.onLeave(this.selfUserInfo.uid);
                } else {
                    this.onLeave(leaving);
                }
            }

            let kicked = data['kicked'];
            if (kicked) {
                this.onLeave(kicked);
            }

            let joining = data['joining'];
            if (joining) {
                this.onJoining([joining]);
            }

            let attendees = data['attendees'];
            this.onJoining(attendees);
        } else if ('destroyed' === videoRoom) {
            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RoomDestroyed);
        } else if ('participants' === videoRoom) {
            let attendees = data['attendees'];
            if (attendees && attendees.length > 0) {
                let as = attendees.map(a => {
                    return {
                        id: a
                    };
                });
                this.onJoining(as);
            }

            let leavings = data['leavings'];
            if (leavings && leavings.length > 0) {
                leavings.forEach(l => {
                    this.onLeave(l);
                });
            }
        } else if ('mute' === videoRoom) {
            let mute = data['mute'];
            this.onMute(mute);
        } else if ('slowlink' === videoRoom) {
            let handleId = obj['handle_id'];
            this.onSlowLink(this.sessionId, handleId, data);
        } else {
            let janus = obj['janus'];
            if (janus === 'hangup') {
                // this.endCall(CallEndReason.REASON_MediaError)
            } else {
                console.log('av-c', 'unknown event');
            }
        }
    }

    keepAlive(start) {
        if (start) {
            if (this.keepAliveTimer) {
                return;
            }
            this.lastActiveTime = new Date().getTime();
            this.keepAliveTimer = setInterval(() => {
                _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, "keepalive", '', (errorCode, res) => {
                    let now = new Date().getTime();
                    if (errorCode === 0) {
                        this.lastActiveTime = now;
                    } else {
                        if (errorCode === 253 || errorCode === 61) {
                            console.error('av-c', 'keepalive error', errorCode);
                            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_SignalError);
                            return;
                        }
                        if (this.lastActiveTime > 0 && now - this.lastActiveTime > 60 * 1000) {
                            console.error('av-c', 'keepalive not response', now - this.lastActiveTime);
                            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_SignalError);
                        }
                    }
                });
            }, 20 * 1000);
        } else {
            if (this.keepAliveTimer) {
                clearInterval(this.keepAliveTimer);
                this.keepAliveTimer = 0;
            }
        }
    }

    joinAndPublish() {
        let obj = {};
        obj['handle_id'] = this.handleId;
        obj['user_id'] = this.selfUserInfo.uid;
        obj['pin'] = this.pin;
        if (this.callExtra) {
            obj['extra'] = this.callExtra;
        }
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'join_pub', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
            console.log('av-c', 'join_pub', errorCode, res);
            if (errorCode !== 0) {
                this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_SignalError);
                return;
            }

            let result = JSON.parse(res);
            let data = result['data'];
            let bizError = data['error_code'];
            if (bizError > 0) {
                console.log('av-c', 'conference request, join_pub error', bizError);
                if (bizError === _roomErrorCode__WEBPACK_IMPORTED_MODULE_18__["default"].JANUS_VIDEOROOM_ERROR_NO_SUCH_ROOM) {
                    this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].RoomNotExist);
                } else if (bizError === _roomErrorCode__WEBPACK_IMPORTED_MODULE_18__["default"].JANUS_VIDEOROOM_ERROR_ID_EXISTS) {
                    // rejoin
                    setTimeout(() => {
                        if (this.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
                            console.log('av-c', 'rejoin');
                            this.joinAndPublish();
                        }
                    }, 500);
                }
                return;
            }
            this.sessionId = result['session_id'];
            this.handleId = result['handle_id'];

            let publishers = data['publishers'];
            this.onPublish(publishers);
            let feedId = data['id'];
            let roomEvent = data['videoroom'];
            this.privateId = data['private_id'];
            let desc = data['description'];
            let roomId = data['room'];

            let attendees = data['attendees'];
            this.onJoining(attendees);

            if (!this.audience) {
                this.cameraPublisher = new _publisherImpl__WEBPACK_IMPORTED_MODULE_23__["default"](this);
                this.cameraPublisher.handleId = this.handleId;
                this.cameraPublisher.publishMedia();
            } else {
                this.setState(_engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED);
            }
            this.keepAlive(true);
        });
    }

    updateInitiator() {
        let minAcceptTime = new Date().getTime() + 24 * 60 * 60 * 1000;
        let newInitiator;
        if ((0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(this.acceptTime, 0)) {
            minAcceptTime = this.acceptTime;
            newInitiator = this.selfUserInfo.uid;
        }
        this.subscriberMap.forEach(subscriber => {
            if ((0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(subscriber.acceptTime, 0) && (0,_util_longUtil_js__WEBPACK_IMPORTED_MODULE_13__.gt)(minAcceptTime, subscriber.acceptTime)) {
                minAcceptTime = subscriber.acceptTime;
                newInitiator = subscriber.userId;
            }
        });
        let oldInitiator = this.initiatorId;
        this.initiatorId = newInitiator;

        this.subscriberMap.forEach(subscriber => {
            subscriber.isInitiator = this.initiatorId === subscriber.userId;
        });
        if (oldInitiator !== newInitiator && newInitiator !== this.selfUserInfo.uid) {
            this.sessionCallback && this.sessionCallback.didChangeInitiator(this.initiatorId);
        }
    }

    onParticipantPublish(publisher) {
        let talking = publisher['talking'];
        let feedId = publisher['id'];
        if (this.isSelfScreenSharing(feedId)) {
            return;
        }
        let callExtra = publisher['display'];
        let newUser = true;
        let streams = publisher['streams'];
        for (const [userId, subscriber] of this.subscriberMap) {
            if (userId === feedId) {
                subscriber.streams(streams);
                subscriber.callExtra = callExtra;
                subscriber.subscribe();
                subscriber.audience = false;
                newUser = false;
                break;
            }
        }

        if (newUser) {
            let subscriber = new _subscriberImpl__WEBPACK_IMPORTED_MODULE_10__["default"](feedId, this);
            this.subscriberMap.set(subscriber.userId, subscriber);
            let now = new Date().valueOf();
            this.setUserAcceptTime(subscriber.userId, now);
            this.setUserJoinTime(subscriber.userId, now);
            subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED;
            subscriber.audience = false;
            subscriber.callExtra = callExtra;
            subscriber.streams(streams);
            subscriber.subscribe();
            if (this.sessionCallback) {
                let p = this.getScreenSharingUserId(subscriber.userId);
                this.sessionCallback.didParticipantJoined(p ? p : subscriber.userId, p !== null);
                this.reportAudienceChanged(subscriber.userId, false);
            }
        } else {
            this.reportAudienceChanged(feedId, false);
        }

        let s = this.subscriberMap.get(feedId);
        if (s.videoMuted || s.audioMuted) {
            this.sessionCallback && this.sessionCallback.didMuteStateChanged([feedId]);
        }
    }

    onPublish(publishers) {
        console.log('av-c', 'onPublish', publishers);
        if (publishers) {
            for (const publisher of publishers) {
                this.onParticipantPublish(publisher);
            }
        }
    }

    onJoining(joining) {
        if (!joining) {
            return;
        }
        console.log('av-c', 'onJoining', joining);
        for (const joiner of joining) {
            let feedId = joiner['id'];
            if (this.isSelfScreenSharing(feedId)) {
                continue;
            }
            let newUser = true;

            let callExtra = joiner['display'];
            for (const [userId, subscriber] of this.subscriberMap) {
                if (userId === feedId) {
                    subscriber.audience = true;
                    subscriber.callExtra = callExtra;
                    newUser = false;
                    break;
                }
            }
            if (newUser) {
                let subscriber = new _subscriberImpl__WEBPACK_IMPORTED_MODULE_10__["default"](feedId, this);
                this.subscriberMap.set(subscriber.userId, subscriber);
                let now = new Date().valueOf();
                this.setUserAcceptTime(subscriber.userId, now);
                this.setUserJoinTime(subscriber.userId, now);
                subscriber.status = _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED;
                subscriber.audience = true;
                subscriber.callExtra = callExtra;
                if (this.sessionCallback) {
                    let p = this.getScreenSharingUserId(subscriber.userId);
                    this.sessionCallback.didParticipantJoined(p ? p : subscriber.userId, p !== null);
                }
            }
        }
    }

    onUnpublish(unpublished) {
        for (const [userId, subscriber] of this.subscriberMap) {
            if (userId === unpublished) {
                subscriber.audience = true;
                subscriber.videoMuted = false;
                subscriber.audioMuted = false;
                if (subscriber.peerConnection) {
                    subscriber.peerConnection.close();
                    subscriber.peerConnection = null;
                }
                subscriber.handleId = 0;
                break;
            }
        }
        if (this.conference && unpublished !== this.selfUserInfo.uid) {
            this.reportAudienceChanged(unpublished, true);
        }
    }

    reportAudienceChanged(userId, audience) {
        let p = this.getScreenSharingUserId(userId);
        this.sessionCallback && this.sessionCallback.didChangeType(p ? p : userId, audience, p !== null);
    }

    onSlowLink(sessionId, handleId, data) {
        if (!this.sessionCallback) {
            return;
        }
        let media = data['media'];
        let uplink = data['uplink'];
        let lost = data['lost'];
        if (this.handleId === handleId) {
            this.sessionCallback.didMediaLostPacket(media, lost, false);
        } else if (this.screenSharingPublisher && this.screenSharingPublisher.handleId === handleId) {
            this.sessionCallback.didMediaLostPacket(media, lost, true);
        } else {
            for (const [userId, subscriber] of this.subscriberMap) {
                if (subscriber.handleId === handleId) {
                    if (userId.startsWith('screen_sharing_')) {
                        let p = userId.substr('screen_sharing_'.length);
                        this.sessionCallback.didUserMediaLostPacket(p, media, lost, uplink, true);
                    } else {
                        this.sessionCallback.didUserMediaLostPacket(userId, media, lost, uplink, false);
                    }
                    break;
                }
            }
        }
    }

    onLeave(leaving) {
        let subscriber = this.getSubscriber(leaving);
        if (subscriber) {
            this.endUserCall(leaving, _engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_RemoteHangup);
        } else if (leaving === this.selfUserInfo.uid) {
            this.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_8__["default"].REASON_Hangup, false);
        }
    }

    mediaStream() {
        return this.screenShareStream ? this.screenShareStream : this.cameraVideoStream;
    }

    requestChangeMode(userId, audience) {
        let msgContent = new _messages_conferenceChangeModeContent__WEBPACK_IMPORTED_MODULE_16__["default"](this.callId, audience);
        let conversation = new _model_conversation__WEBPACK_IMPORTED_MODULE_17__["default"](_model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single, userId, 0);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessageEx(conversation, msgContent, this.getParticipantIds(), false, false);
    }

    onRequestChangeMode(audience) {
        // TODO 用户确认
        // this.sessionCallback && this.sessionCallback.onRequestChangeMode(audience);
        this.switchAudience(audience);
    }

    onKickoff() {
        this.leaveConference(false);
    }

    switchAudience(audience) {
        var _this9 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            console.log('av-c', 'switchAudience', audience);
            if (!_this9.conference) {
                return;
            }
            if (_this9._isSwitchAudience || audience === _this9.audience) {
                console.log('av-c', `switchAudience isSwitching ${_this9._isSwitchAudience}`);
                return;
            }

            _this9._isSwitchAudience = true;
            if (audience) {
                if (!_this9.audience) {
                    if (_this9.screenSharingPublisher) {
                        yield _this9.screenSharingPublisher.unPublishMedia();
                        _this9.screenSharingPublisher.screenShareStream = null;
                    }
                    if (_this9.cameraPublisher) {
                        yield _this9.cameraPublisher.unPublishMedia();
                        _this9.cameraPublisher.cameraVideoStream = null;
                    }
                    _this9.reportAudienceChanged(_this9.selfUserInfo.uid, true);
                    _this9.audience = true;
                }
            } else {
                if (!_this9.cameraPublisher) {
                    _this9.cameraPublisher = new _publisherImpl__WEBPACK_IMPORTED_MODULE_23__["default"](_this9);
                    _this9.cameraPublisher.handleId = _this9.handleId;
                }
                yield _this9.cameraPublisher.publishMedia();
                _this9.reportAudienceChanged(_this9.selfUserInfo.uid, false);
                _this9.notifyMuteState();
                _this9.audience = false;
            }
            _this9._isSwitchAudience = false;
        })();
    }

    onMute(mute) {
        let changedUsers = [];
        this.subscriberMap.forEach((subscriber, userId) => {
            let obj = mute[userId];
            let a = false;
            let v = false;
            if (obj) {
                a = obj.hasOwnProperty('a') ? obj['a'] : false;
                v = obj.hasOwnProperty('v') ? obj['v'] : false;
            }
            if (subscriber.videoMuted !== v || subscriber.audioMuted !== a) {
                subscriber.videoMuted = v;
                subscriber.audioMuted = a;
                if (!subscriber.audience) {
                    changedUsers.push(userId);
                }
            }
        });

        changedUsers = changedUsers.filter(uid => uid !== this.selfUserInfo.uid);
        if (changedUsers.length > 0) {
            this.sessionCallback && this.sessionCallback.didMuteStateChanged(changedUsers);
        }
    }

    notifyMuteState() {
        if (!this.conference || this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
            return;
        }

        let obj = {
            handle_id: this.handleId,
            a: this.audioMuted
        };
        if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].SCREEN_SHARING_REPLACE_MODE) {
            obj.v = this.videoMuted && !this.isScreenSharing();
        } else {
            obj.v = this.videoMuted;
        }
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'mute', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
            console.log('av-c', 'mute res', errorCode, res);
        });
    }

    kickoffParticipant(userId, successCB, failCB) {
        if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_IDLE) {
            failCB && failCB(-1);
        }
        let subscriber = this.getSubscriber(userId);
        if (subscriber) {
            let obj = {
                handle_id: this.handleId,
                user: userId
            };
            _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'kick', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
                console.log('av-c', 'kick res', errorCode, res);
                if (errorCode === 0) {
                    successCB && successCB();
                } else {
                    failCB && failCB(errorCode);
                }
            });
        }
    }

    closeVoipWindow() {
        // 页面释放有问题没有真正释放setRemoteDescription掉
        // eslint-disable-next-line no-const-assign
        if (localStorage.getItem("enable_voip_debug")) {
            return;
        }
        if (_platform_js__WEBPACK_IMPORTED_MODULE_11__.currentWindow) {
            _platform_js__WEBPACK_IMPORTED_MODULE_11__.currentWindow.close();
        } else {
            _engine_avenginekitproxy__WEBPACK_IMPORTED_MODULE_20__["default"].emitToMain('close-voip-div');
        }
        // if (reason === CallEndReason.RoomNotExist || reason === CallEndReason.RoomParticipantsFull) {
        //     console.log('av-c','join conference failed', reason)
        //     let obj = {reason: reason, session: session};
        //     localStorageEmitter.send('join-conference-failed', obj);
        // }
    }

    setAudioInputDeviceId(audioDeviceId) {
        console.log('av-c', 'setInputAudioDeviceId', this.audioInputDeviceId, audioDeviceId);
        audioDeviceId = audioDeviceId === 'null' ? null : audioDeviceId;
        this.audioInputDeviceId = audioDeviceId;
        if (this.cameraPublisher) {
            this.cameraPublisher.stopVideoStream(this.cameraPublisher.cameraVideoStream);
            this.cameraPublisher.cameraVideoStream = null;
            this.cameraPublisher.createMediaSenders();
        }
    }

    setVideoInputDeviceId(videoDeviceId) {
        console.log('av-c', 'setVideoInputDeviceId', this.videoInputDeviceId, videoDeviceId);
        videoDeviceId = videoDeviceId === 'null' ? null : videoDeviceId;
        this.videoInputDeviceId = videoDeviceId;
        if (this.cameraPublisher) {
            this.cameraPublisher.stopVideoStream(this.cameraPublisher.cameraVideoStream);
            this.cameraPublisher.cameraVideoStream = null;
            this.cameraPublisher.createMediaSenders();
        }
    }

    setInputStream(stream) {
        this.externalStream = stream;
        if (this.cameraPublisher) {
            this.cameraPublisher.stopVideoStream(this.cameraPublisher.cameraVideoStream);
            this.cameraPublisher.cameraVideoStream = null;
            this.cameraPublisher.createMediaSenders();
        }
    }

    switchCamera() {
        let supports = navigator.mediaDevices.getSupportedConstraints();
        if (!supports['facingMode']) {
            return false;
        }
        if (this.videoCamera === 'user') {
            this.videoCamera = 'environment';
        } else {
            this.videoCamera = 'user';
        }
        console.log('av-c', 'switch camera', this.videoCamera);
        this.cameraPublisher.stopVideoStream(this.cameraPublisher.cameraVideoStream);
        this.cameraPublisher.createMediaSenders();

        return true;
    }

    rotate(ang) {
        console.log('av-c', 'rotate', ang);
        if (this.cameraPublisher) {
            this.cameraPublisher.rotate(ang);
        }
    }

    screenSharingId() {
        return 'screen_sharing_' + this.selfUserInfo.uid;
    }

    //如果是屏幕共享，返回该用户的id，否则返回空，这样就可以根据是否为空判断是否为屏幕共享
    getScreenSharingUserId(userId = '') {
        if (userId.startsWith('screen_sharing_')) {
            return userId.substring('screen_sharing_'.length);
        }
        return null;
    }

    isSelfScreenSharing(feedId = '') {
        return this.screenSharingId() === feedId;
    }

    setVideoMaxBitrate(maxBitrateKbps) {
        this.cameraPublisher && this.cameraPublisher.setVideoMaxBitrate(maxBitrateKbps);
    }
    scaleVideoResolutionDownBy(scalingFactor) {
        this.cameraPublisher && this.cameraPublisher.scaleVideoResolutionDownBy(scalingFactor);
    }

    // Dumping a stats variable as a string.
    // might be named toString?
    dumpStats(results) {
        let statsString = '';
        results.forEach(res => {
            statsString += '<h3>Report type=';
            statsString += res.type;
            statsString += '</h3>\n';
            statsString += `id ${res.id}<br>`;
            statsString += `time ${res.timestamp}<br>`;
            babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_0___default()(res).forEach(k => {
                if (k !== 'timestamp' && k !== 'type' && k !== 'id') {
                    if (typeof res[k] === 'object') {
                        statsString += `${k}: ${babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(res[k])}<br>`;
                    } else {
                        statsString += `${k}: ${res[k]}<br>`;
                    }
                }
            });
        });
        return statsString;
    }

    showRemoteStats(userId, results) {
        const statsString = this.dumpStats(results);
        if (localStorage.getItem('enable_voip_debug.stats')) {
            console.log('av-c', 'statsString', userId, statsString);
        }
        // calculate video bitrate
        results.forEach(report => {
            const now = report.timestamp;

            let bitrate;
            if (report.type === 'inbound-rtp' && report.mediaType === 'video') {
                const bytes = report.bytesReceived;
                if (this.timestampPrev) {
                    bitrate = 8 * (bytes - this.bytesPrev) / (now - this.timestampPrev);
                    bitrate = Math.floor(bitrate);
                }
                this.bytesPrev = bytes;
                this.timestampPrev = now;
            }
            if (bitrate) {
                bitrate += ' kbits/sec';
                console.log('av-c', 'Bitrate:', userId, bitrate);
            }
        });
    }

    setParticipantVideoType(userId, isScreenSharing, videoType) {
        if (isScreenSharing) {
            userId = 'screen_sharing_' + userId;
        }
        for (const [uid, subscriber] of this.subscriberMap) {
            if (userId === uid) {
                subscriber.setVideoType(videoType);
                break;
            }
        }
    }

    onIMConnectionStatusChange(status) {
        console.log('av-c', 'onIMConnectionStatusChange', status);
        if (status === 1) {
            if (this.status === _engine_callState__WEBPACK_IMPORTED_MODULE_6__["default"].STATUS_CONNECTED) {
                this.queryParticipantStatus();
            }
            if (this.cameraPublisher) {
                this.cameraPublisher.restartICE();
            }
            if (this.screenSharingPublisher) {
                this.screenSharingPublisher.restartICE();
            }

            if (this.subscriberMap) {
                this.subscriberMap.forEach((client, userId) => {
                    client.restartICE();
                });
            }
        }
    }

    queryParticipantStatus() {
        let obj = {
            handle_id: this.handleId,
            pin: this.pin
        };

        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendConferenceRequest(this.sessionId, this.callId, 'query_participants', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()(obj), (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'conference request, query_participants error', errorCode);
                return;
            }
            let result = JSON.parse(res);
            let data = result['data'];
            if (data) {
                let publishers = data['publishers'];
                let attendees = data['attendees'];

                this.onJoining(attendees);
                this.onPublish(publishers);
            }
        });
    }

    createDummyVideoStream() {
        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            const video = document.createElement('video');
            video.autoplay = true;
            video.loop = true;
            video.volume = 0.5;

            video.src = _engine_avenginekit__WEBPACK_IMPORTED_MODULE_14__["default"].DUMMY_VIDEO_URI;
            // video.src = 'data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAABZJtZGF0AAACrgYF//+q3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE2MSByMzAyNyA0MTIxMjc3IC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAyMCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1oZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTYgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAANGWIhAA7//73Tr8Cm1TCKgOSVwr2yqQmWblSawJGXYUqrq2Pk7OdTgAAE+AFwMk12oNQ+eEAAAAMQZokbEO//qmWAAy43gIATGF2YzU4LjkxLjEwMABCIAjBGDgAAAAJQZ5CeIX/AA7pIRAEYIwcIRAEYIwcAAAACQGeYXRCvwAUkCEQBGCMHCEQBGCMHAAAAAkBnmNqQr8AFJEhEARgjBwhEARgjBwAAAASQZpoSahBaJlMCHf//qmWAAy5IRAEYIwcAAAAC0GehkURLC//AA7pIRAEYIwcIRAEYIwcAAAACQGepXRCvwAUkSEQBGCMHCEQBGCMHAAAAAkBnqdqQr8AFJAhEARgjBwhEARgjBwAAAASQZqsSahBbJlMCHf//qmWAAy4IRAEYIwcAAAAC0GeykUVLC//AA7pIRAEYIwcIRAEYIwcAAAACQGe6XRCvwAUkCEQBGCMHCEQBGCMHAAAAAkBnutqQr8AFJAhEARgjBwAAAASQZrwSahBbJlMCG///qeEABlRIRAEYIwcIRAEYIwcAAAAC0GfDkUVLC//AA7pIRAEYIwcIRAEYIwcAAAACQGfLXRCvwAUkSEQBGCMHCEQBGCMHAAAAAkBny9qQr8AFJAhEARgjBwAAAASQZs0SahBbJlMCG///qeEABlQIRAEYIwcIRAEYIwcAAAAC0GfUkUVLC//AA7pIRAEYIwcIRAEYIwcAAAACQGfcXRCvwAUkCEQBGCMHCEQBGCMHAAAAAkBn3NqQr8AFJAhEARgjBwAAAASQZt4SahBbJlMCF///oywAGNBIRAEYIwcIRAEYIwcAAAAC0GflkUVLC//AA7oIRAEYIwcIRAEYIwcAAAACQGftXRCvwAUkSEQBGCMHAAAAAkBn7dqQr8AFJEhEARgjBwhEARgjBwAAAARQZu5SahBbJlMCFf//jhAAYEhEARgjBwhEARgjBwhEARgjBwAAAihbW9vdgAAAGxtdmhkAAAAAAAAAAAAAAAAAAAD6AAABBAAAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAA/Z0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAABAAAAAAAABBAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAMgAAADIAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAQQAAAEAAABAAAAAANubWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAAyAAAANABVxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAAAAAAAABWaWRlb0hhbmRsZXIAAAADGW1pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAtlzdGJsAAAArXN0c2QAAAAAAAAAAQAAAJ1hdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAMgAyABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAAN2F2Y0MBZAAM/+EAGmdkAAys2UNG+WXARAAAAwAEAAADAMg8UKZYAQAGaOvjyyLA/fj4AAAAABBwYXNwAAAAAQAAAAEAAAAYc3R0cwAAAAAAAAABAAAAGgAAAgAAAAAUc3RzcwAAAAAAAAABAAAAAQAAAOBjdHRzAAAAAAAAABoAAAABAAAEAAAAAAEAAAoAAAAAAQAABAAAAAABAAAAAAAAAAEAAAIAAAAAAQAACgAAAAABAAAEAAAAAAEAAAAAAAAAAQAAAgAAAAABAAAKAAAAAAEAAAQAAAAAAQAAAAAAAAABAAACAAAAAAEAAAoAAAAAAQAABAAAAAABAAAAAAAAAAEAAAIAAAAAAQAACgAAAAABAAAEAAAAAAEAAAAAAAAAAQAAAgAAAAABAAAKAAAAAAEAAAQAAAAAAQAAAAAAAAABAAACAAAAAAEAAAQAAAAAKHN0c2MAAAAAAAAAAgAAAAEAAAACAAAAAQAAAAIAAAABAAAAAQAAAHxzdHN6AAAAAAAAAAAAAAAaAAAC6gAAABAAAAANAAAADQAAAA0AAAAWAAAADwAAAA0AAAANAAAAFgAAAA8AAAANAAAADQAAABYAAAAPAAAADQAAAA0AAAAWAAAADwAAAA0AAAANAAAAFgAAAA8AAAANAAAADQAAABUAAAB0c3RjbwAAAAAAAAAZAAAAMAAAA0EAAANaAAADcwAAA4wAAAOoAAADwwAAA9wAAAP1AAAEEQAABCwAAARFAAAEWAAABHoAAASVAAAErgAABMEAAATjAAAE/gAABRcAAAUqAAAFTAAABWcAAAV6AAAFkwAAA9V0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAACAAAAAAAAA/4AAAAAAAAAAAAAAAEBAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAPmAAAEAAABAAAAAANNbWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAACsRAAAsABVxAAAAAAALWhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZXIAAAAC+G1pbmYAAAAQc21oZAAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAACvHN0YmwAAABqc3RzZAAAAAAAAAABAAAAWm1wNGEAAAAAAAAAAQAAAAAAAAAAAAIAEAAAAACsRAAAAAAANmVzZHMAAAAAA4CAgCUAAgAEgICAF0AVAAAAAAH0AAAACJgFgICABRIQVuUABoCAgAECAAAAGHN0dHMAAAAAAAAAAQAAACwAAAQAAAAAxHN0c2MAAAAAAAAADwAAAAEAAAABAAAAAQAAAAIAAAACAAAAAQAAAAUAAAABAAAAAQAAAAYAAAACAAAAAQAAAAkAAAABAAAAAQAAAAoAAAACAAAAAQAAAAwAAAABAAAAAQAAAA0AAAACAAAAAQAAABAAAAABAAAAAQAAABEAAAACAAAAAQAAABQAAAABAAAAAQAAABUAAAACAAAAAQAAABcAAAABAAAAAQAAABgAAAACAAAAAQAAABkAAAADAAAAAQAAAMRzdHN6AAAAAAAAAAAAAAAsAAAAFwAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAB0c3RjbwAAAAAAAAAZAAADKgAAA04AAANnAAADgAAAA6IAAAO3AAAD0AAAA+kAAAQLAAAEIAAABDkAAARSAAAEbgAABIkAAASiAAAEuwAABNcAAATyAAAFCwAABSQAAAVAAAAFWwAABXQAAAWHAAAFqAAAABpzZ3BkAQAAAHJvbGwAAAACAAAAAf//AAAAHHNiZ3AAAAAAcm9sbAAAAAEAAAAsAAAAAQAAAGJ1ZHRhAAAAWm1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAALWlsc3QAAAAlqXRvbwAAAB1kYXRhAAAAAQAAAABMYXZmNTguNDUuMTAw';

            video.load();
            // safari 上，不能自动播放
            try {
                yield video.play();
            } catch (e) {
                console.log('av-c', 'video auto play error', e);
            }

            let stream = null;
            if (video.captureStream) {
                stream = video.captureStream();
            } else if (video.mozCaptureStream) {
                stream = video.mozCaptureStream();
            } else {
                console.log('av-c', 'video captureStream() not supported, fallback to canvas');
                stream = document.createElement('canvas').captureStream(60);
            }
            console.log('av-c', 'createDummyVideoStream', stream, stream.getVideoTracks().length);
            return stream;
        })();
    }

    // 远程控制，依赖于高级版音视频，只支持单人视频通话
    // 远程控制，主动方发起
    // 远程协助，被控方发起

    /**
     *
     * 邀请对方远程协助
     */
    inviteRemoteControl() {
        if (this.conversation.type !== _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && !this.audioOnly) {
            console.error('av-c', '仅高级版音视频单人视频通话，支持远程控制');
            return;
        }
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_OUTGOING_INVITE;
        let inviteMsgContent = new _messages_rcInviteMessageContent__WEBPACK_IMPORTED_MODULE_27__["default"](this.callId);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessageEx(this.conversation, inviteMsgContent, [], false);

        setTimeout(() => {
            if (this.rcStatus !== _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED) {
                this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_IDLE;
                this.sessionCallback && this.sessionCallback.didRemoteControlEnd(_engine_rcEndReason__WEBPACK_IMPORTED_MODULE_30__["default"].REASON_TIME_OUT);
            }
        }, 60 * 1000);
    }

    /**
     *
     * @param {string} userId
     * @param {any} data
     */
    onDataChannelMessage(userId, data) {
        if (this.rcStatus === _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED) {
            let obj = JSON.parse(data);
            if (obj.type === 'ev') {
                this.sessionCallback && this.sessionCallback.didReceiveRemoteControlInputEvent(obj.data);
            } else if (obj.type === 'cs') {
                let text = obj.data;
                if (_platform_js__WEBPACK_IMPORTED_MODULE_11__.clipboard) {
                    _platform_js__WEBPACK_IMPORTED_MODULE_11__.clipboard.writeText(text);
                } else {
                    this._lastRemoteClipboardText = text;
                    navigator.clipboard.writeText(text).catch(reason => {
                        // do nothing
                    });
                }
            }
        }
    }

    /**
     * 接受远程协助邀请
     */
    acceptRemoteControlInvite() {
        if (this.conversation.type !== _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && !this.audioOnly) {
            console.error('av-c', '仅高级版音视频单人视频通话，支持远程控制');
            return;
        }
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED;
        this._readClipboard();
        this._listenDocumentOnFocus();
        let acceptMessageContent = new _messages_rcAcceptInviteMessageContent__WEBPACK_IMPORTED_MODULE_28__["default"](this.callId);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessageEx(this.conversation, acceptMessageContent, [], false);
    }

    /**
     * 拒绝远程协助邀请
     */
    rejectRemoteControlInvite() {
        if (this.conversation.type !== _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && !this.audioOnly) {
            console.error('av-c', '仅高级版音视频单人视频通话，支持远程控制');
            return;
        }
        let endMessageContent = new _messages_rcEndMessageContent__WEBPACK_IMPORTED_MODULE_29__["default"](this.callId);
        endMessageContent.reason = _engine_rcEndReason__WEBPACK_IMPORTED_MODULE_30__["default"].REASON_REJECT;
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessageEx(this.conversation, endMessageContent, [], false);
    }

    /**
     * 结束远程控制或远程协助
     * @param reason
     */
    endRemoteControl(reason) {
        if (this.conversation.type !== _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && !this.audioOnly) {
            console.error('av-c', '仅高级版音视频单人视频通话，支持远程控制');
            return;
        }
        let endMessageContent = new _messages_rcEndMessageContent__WEBPACK_IMPORTED_MODULE_29__["default"](this.callId);
        endMessageContent.reason = _engine_rcEndReason__WEBPACK_IMPORTED_MODULE_30__["default"].REASON_HANGUP;
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_IDLE;
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_7__["default"].sendSignalMessageEx(this.conversation, endMessageContent, [], false);
    }

    _onReceiveRemoteControlInvite() {
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_INCOMING_INVITE;
        this.sessionCallback.onReceiveRemoteControlInvite();
        setTimeout(() => {
            if (this.rcStatus !== _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED) {
                this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_IDLE;
                this.sessionCallback && this.sessionCallback.didRemoteControlEnd(_engine_rcEndReason__WEBPACK_IMPORTED_MODULE_30__["default"].REASON_TIME_OUT);
            }
        }, 60 * 1000);
    }

    _didRemoteControlEnd(reason) {
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_IDLE;
        this.sessionCallback.didRemoteControlEnd(reason);
    }

    _didAcceptRemoteControlInvite() {
        this.rcStatus = _engine_rcState__WEBPACK_IMPORTED_MODULE_31__["default"].STATUS_CONNECTED;
        this.sessionCallback.didAcceptRemoteControlInvite();
    }

    _isSupportRemoteControl() {
        if (this.conversation.type !== _model_conversationType__WEBPACK_IMPORTED_MODULE_15__["default"].Single && !this.audioOnly) {
            console.error('av-c', '仅高级版音视频单人视频通话，支持远程控制');
            return false;
        }
        return true;
    }

    sendRemoteControlInputEvent(options) {
        // if(options.e === 'mv') {
        //     for (let i = 0; i < this.requestArray.length; i++) {
        //         if(this.requestArray[i].e === 'mv') {
        //             this.requestArray.splice(i, 1);
        //             break;
        //         }
        //     }
        // }
        this.requestArray.push(options);

        // setTimeout(() => {
        console.log('datachannel send ', this.requestArray);
        if (this.requestArray.length > 0) {
            this.cameraPublisher.dataChannel.send(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()({
                type: 'ev',
                data: this.requestArray
            }));
            this.requestArray = [];
        }
        // }, 50);
    }

    _sendClipboardText(text) {
        if (text && this._lastLocalClipboardText !== text) {
            if (this.cameraPublisher.datachannel.readyState === 'open') {
                this.cameraPublisher.dataChannel.send(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_4___default()({
                    type: 'cs', // clipboard text sync
                    data: text
                }));
            }
            this._lastLocalClipboardText = text;
        }
    }

    _readClipboard() {
        if (!this.clipboardInterval) {
            this.clipboardInterval = setInterval(() => {
                if (_platform_js__WEBPACK_IMPORTED_MODULE_11__.clipboard) {
                    let text = _platform_js__WEBPACK_IMPORTED_MODULE_11__.clipboard.readText();
                    this._sendClipboardText(text);
                    return;
                }

                if (!document.hasFocus()) {
                    return;
                }
                navigator.clipboard.readText().then(text => {
                    this._sendClipboardText(text);
                }).catch(reason => {
                    // do nothing
                });
            }, 50);
        }
    }

}

/***/ }),

/***/ "./av/internal/publisherImpl.js":
/*!**************************************!*\
  !*** ./av/internal/publisherImpl.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PublisherImpl)
/* harmony export */ });
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! babel-runtime/core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");
/* harmony import */ var babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _engine_callState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../engine/callState */ "../engine/callState");
/* harmony import */ var _avenginekitImpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./avenginekitImpl */ "./av/internal/avenginekitImpl.js");
/* harmony import */ var _roomErrorCode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./roomErrorCode */ "./av/internal/roomErrorCode.js");
/* harmony import */ var _engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../engine/callEndReason */ "../engine/callEndReason");
/* harmony import */ var _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../engine/avenginekit */ "../engine/avenginekit");
/* harmony import */ var _engine_videoProfile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../engine/videoProfile */ "../engine/videoProfile");
/* harmony import */ var _soundMeter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./soundMeter */ "./av/internal/soundMeter.js");











class PublisherImpl {
    // hasNoWebcam;
    constructor(callSession) {
        this.callSession = callSession;
    }

    // 单向，只能用来发送数据，需要接收其他人发送来的数据时，需要使用 subscriber.dataChannel


    createMediaSenders() {
        var _this = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            let audioTrack;
            if (_this.callSession.previewStream) {
                console.log('av-c', 'stop previewStream');
                _this.callSession.previewStream.getTracks().forEach(function (track) {
                    return track.stop();
                });
            }
            console.log('av-c', 'createMediaSenders -0', _this.callSession.audioOnly, _this.callSession.videoMuted);
            if (_this.callSession.externalStream) {
                _this.cameraVideoStream = _this.callSession.externalStream;
                if (_this.callSession.sessionCallback && !_this.callSession.videoMuted) {
                    _this.callSession.sessionCallback.didCreateLocalVideoTrack(_this.callSession.externalStream, false);
                }
            } else {
                _this.cameraVideoStream = yield _this.callSession.createLocalCameraVideoStream(_this.callSession.audioOnly || _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SCREEN_SHARING_REPLACE_MODE && _this.callSession.isScreenSharing());
                if (!_this.cameraVideoStream) {
                    if (!_this.callSession.audioOnly) {
                        let audioStream = yield _this.callSession.createLocalCameraVideoStream(true);
                        if (audioStream) {
                            audioTrack = audioStream.getAudioTracks()[0];
                        }
                    }

                    _this.cameraVideoStream = yield _this.callSession.createDummyVideoStream();
                    if (!audioTrack) {
                        audioTrack = _this.cameraVideoStream.getAudioTracks()[0];
                    } else {
                        let dummyAudioTrack = _this.cameraVideoStream.getAudioTracks()[0];
                        _this.cameraVideoStream.removeTrack(dummyAudioTrack);
                        _this.cameraVideoStream.addTrack(audioTrack);
                    }
                }
                if (!_this.cameraVideoStream) {
                    console.log('av-c', 'can not getUserMedia');
                    _this.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].REASON_MediaError);
                    return;
                }
            }

            audioTrack = _this.cameraVideoStream.getAudioTracks()[0];
            if (!audioTrack) {
                if (!_this.callSession.audioOnly) {
                    console.warn('do not have audioTrack, create local audio track');
                    let audioStream = yield _this.callSession.createLocalCameraVideoStream(true, false);
                    if (audioStream) {
                        audioTrack = audioStream.getAudioTracks()[0];
                    }
                }
            }
            audioTrack.enabled = !_this.callSession.audioMuted;
            audioTrack.onended = function () {
                // 可能是拔出耳机导致
                if (_this.callSession.status !== _engine_callState__WEBPACK_IMPORTED_MODULE_3__["default"].STATUS_IDLE) {
                    console.log('av-c', 'audio track ended, re-createMediaSenders');
                    _this.callSession.audioInputDeviceId = null;
                    _this.stopVideoTrack(_this.cameraVideoStream);
                    _this.cameraVideoStream = null;
                    _this.createMediaSenders();
                }
            };
            if (_this.cameraVideoStream.getVideoTracks().length > 0) {
                let videoTrack = _this.cameraVideoStream.getVideoTracks()[0];
                videoTrack.onended = function () {
                    console.log('av-c', 'video track ended');
                    _this.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].REASON_MediaError);
                };
            }
            if (_this.soundMeter) {
                _this.soundMeter.stop();
                _this.soundMeter = null;
            }
            let soundMeter = new _soundMeter__WEBPACK_IMPORTED_MODULE_9__.SoundMeter(window.audioContext);
            try {
                soundMeter.connectToSource(_this.cameraVideoStream, function (err) {
                    console.log('av-c', 'connect to self soundMeter', err);
                });
            } catch (e) {
                console.error(e);
            }
            _this.soundMeter = soundMeter;

            let pc = _this.peerConnection;
            if (pc) {
                //let videoStream = this.callSession.videoMuted ? this.dummyVideoStream : this.cameraVideoStream;
                let videoStream = _this.cameraVideoStream;
                // audioTrack = this.cameraVideoStream.getAudioTracks()[0];
                if (!_this.callSession.audioOnly) {
                    if (_this.audioSender) {
                        yield _this.audioSender.replaceTrack(audioTrack);
                    } else {
                        _this.audioSender = pc.addTrack(audioTrack, videoStream);
                    }
                    console.log('av-c', 'createMediaSenders -1', _this.callSession.audioOnly, _this.callSession.videoMuted, videoStream, videoStream.getVideoTracks().length);
                    if (videoStream && videoStream.getVideoTracks().length > 0 && videoStream.getVideoTracks()[0]) {
                        let vp = _engine_videoProfile__WEBPACK_IMPORTED_MODULE_8__["default"].getVideoProfile(_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].VIDEO_PROFILE);
                        if (!_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SCREEN_SHARING_REPLACE_MODE || !_this.callSession.isScreenSharing()) {
                            let streamWithoutAudioTrack = new MediaStream([videoStream.getVideoTracks()[0]]);
                            let rotatedStream = videoStream;
                            if (_this.callSession.rotateAng && _this.callSession.sessionCallback.onRotateStream) {
                                rotatedStream = _this.callSession.sessionCallback.onRotateStream(streamWithoutAudioTrack, _this.callSession.rotateAng);
                                console.log('av-c', 'rotatedStream', rotatedStream ? rotatedStream.getVideoTracks().length : 'no videoTrack');
                                if (_this.callSession.sessionCallback.didRotateLocalVideoTrack) {
                                    rotatedStream.addTrack(_this.cameraVideoStream.getAudioTracks()[0]);
                                    _this.callSession.sessionCallback.didRotateLocalVideoTrack(rotatedStream);
                                }
                            }
                            if (_this.videoSender) {
                                console.log('av-c', 'pc replace video track', rotatedStream.getVideoTracks()[0]);
                                yield _this.videoSender.replaceTrack(rotatedStream.getVideoTracks()[0]);
                            } else {
                                console.log('av-c', 'pc add video track', rotatedStream.getVideoTracks()[0]);
                                _this.videoSender = pc.addTrack(rotatedStream.getVideoTracks()[0]);
                            }
                            if (!_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].DISABLE_DUAL_STREAM) {
                                let smallCameraVideoTrack;
                                console.log('av-c', 'to add small stream');
                                if (_this.callSession.rotateAng && _this.callSession.sessionCallback.onRotateStream) {
                                    let scaledRotatedStream = _this.callSession.sessionCallback.onRotateStream(streamWithoutAudioTrack, _this.callSession.rotateAng, { width: 200, height: 200 });
                                    smallCameraVideoTrack = scaledRotatedStream.getVideoTracks()[0];
                                    console.log('av-c', 'small rotatedStream', scaledRotatedStream ? scaledRotatedStream.getVideoTracks().length : 'no videoTrack');
                                } else {
                                    smallCameraVideoTrack = videoStream.getVideoTracks()[0].clone();
                                    // try {
                                    //     await smallCameraVideoTrack.applyConstraints(this.tinyVideoTrackConstraints(smallCameraVideoTrack))
                                    // } catch (e) {
                                    //     console.error('av-c','smallCameraVideoTrack applyConstraints error',e, smallCameraVideoTrack.getCapabilities(), this.tinyVideoTrackConstraints(smallCameraVideoTrack));
                                    //     // fallback
                                    //     smallCameraVideoTrack = videoStream.getVideoTracks()[0].clone();
                                    // }
                                }
                                _this.smallCameraVideoTrack = smallCameraVideoTrack;
                                if (_this.smallVideoSender) {
                                    console.log('av-c', 'pc small replace video track', smallCameraVideoTrack);
                                    yield _this.smallVideoSender.replaceTrack(smallCameraVideoTrack);
                                } else {
                                    console.log('av-c', 'pc small add video track', smallCameraVideoTrack);
                                    _this.smallVideoSender = pc.addTrack(smallCameraVideoTrack);
                                }
                            }
                            _this.setVideoMaxBitrate(vp.bitrate);
                        } else {
                            _this.setVideoMaxBitrate(vp.bitrate);
                        }
                    }
                } else {
                    if (_this.audioSender) {
                        yield _this.audioSender.replaceTrack(audioTrack);
                    } else {
                        _this.audioSender = pc.addTrack(audioTrack, videoStream);
                    }
                }

                if (_this.callSession.videoMuted) {
                    console.log('av-c', 'videoMuted, stopVideoTrack');
                    _this.stopVideoTrack(_this.cameraVideoStream);
                }
                if (_this.callSession.audioMuted) {
                    console.log('av-c', 'audioMuted, stopAudioTrack');
                    _this.stopAudioTrack(_this.cameraVideoStream);
                }
                console.log('av-c', 'Added local stream to pc');
            }
        })();
    }

    publishMedia(restartIce = false) {
        var _this2 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            if (!restartIce) {
                _this2.peerConnection = _this2.callSession.createPeerConnection(_this2.callSession.selfUserInfo.uid);
                console.log('av-c', 'enable data channel', _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].ENABLE_DATA_CHANNEL);
                if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].ENABLE_DATA_CHANNEL) {
                    _this2.dataChannel = _this2.peerConnection.createDataChannel('data_channel', {
                        ordered: true
                    });
                }
                yield _this2.createMediaSenders();
            }
            try {
                let offer = yield _this2.peerConnection.createOffer(restartIce ? _this2.callSession.restartPublishConstrains() : _this2.callSession.defaultPublishMediaConstraints());
                console.log('av-c', 'publishMedia offer, m=video index', offer.sdp.indexOf('m=video'));
                yield _this2.peerConnection.setLocalDescription(offer);
                let obj = {};
                obj['session_id'] = _this2.callSession.sessionId;
                obj['handle_id'] = _this2.handleId;
                let body = {};
                body['request'] = 'configure';
                body['audio'] = true;
                // TODO video enable or not?
                body['video'] = true;
                body['pin'] = _this2.callSession.pin;
                obj['body'] = body;
                let jsep = {};
                jsep['sdp'] = offer.sdp;
                jsep['type'] = 'offer';
                obj['jsep'] = jsep;

                let p = new (babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default())(function (resolve, reject) {
                    _avenginekitImpl__WEBPACK_IMPORTED_MODULE_4__["default"].sendConferenceRequest(_this2.callSession.sessionId, _this2.callSession.callId, 'message', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default()(obj), function (errorCode, res) {
                        if (errorCode !== 0) {
                            console.log('av-c', 'conference request, message, error', errorCode);
                            resolve();
                            return;
                        }

                        let result = JSON.parse(res);
                        if (_this2.callSession.sessionId !== result['session_id']) {
                            console.log('av-c', 'conference request, message unknown sessionId', _this2.sessionId, result['session_id']);
                            resolve();
                            return;
                        }
                        let jsep = result['jsep'];

                        if (jsep && 'answer' === jsep['type']) {
                            _this2.peerConnection && _this2.peerConnection.setRemoteDescription(jsep);
                            _this2.callSession.notifyMuteState();
                        } else {
                            let plugindata = result['plugindata'];
                            if (plugindata) {
                                let roomData = plugindata['data'];
                                if (roomData) {
                                    let errorCode = roomData['error_code'];
                                    if (errorCode === _roomErrorCode__WEBPACK_IMPORTED_MODULE_5__["default"].JANUS_VIDEOROOM_ERROR_PUBLISHERS_FULL) {
                                        // if (this.callSession.status === CallState.STATUS_CONNECTED) {
                                        //     this.unPublishMedia();
                                        //     this.callSession.audience = true;
                                        //     this.callSession.sessionCallback && this.callSession.sessionCallback.didChangeType(this.callSession.selfUserInfo.uid, true);
                                        // } else if (this.callSession.status !== CallState.STATUS_IDLE) {
                                        _this2.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].RoomParticipantsFull);
                                        // }
                                    } else {
                                        _this2.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].REASON_SignalError);
                                    }
                                }
                            }
                        }
                        resolve();
                    });
                });
                return p;
            } catch (e) {
                console.error('av-c', 'publish media error', e);
                _this2.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].REASON_MediaError);
            }
        })();
    }

    unPublishMedia() {
        var _this3 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            _this3.stopVideoStream(_this3.cameraVideoStream);
            if (_this3.soundMeter) {
                try {
                    _this3.soundMeter.stop();
                } catch (e) {}
                _this3.soundMeter = null;
            }
            if (_this3.peerConnection) {
                _this3.peerConnection.close();
                _this3.peerConnection = null;
                _this3.audioSender = null;
                _this3.videoSender = null;
                _this3.smallVideoSender = null;
            }

            let obj = {};
            obj['handle_id'] = _this3.handleId;
            obj['pin'] = _this3.callSession.pin;

            let p = new (babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default())(function (resolve, reject) {
                _avenginekitImpl__WEBPACK_IMPORTED_MODULE_4__["default"].sendConferenceRequest(_this3.callSession.sessionId, _this3.callSession.callId, 'unpublish', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default()(obj), function (errorCode, res) {
                    if (errorCode > 0) {
                        _this3.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_6__["default"].REASON_SignalError);
                    }
                    // do nothing else
                    resolve();
                });
            });
            return p;
        })();
    }

    rotate(ang) {
        var _this4 = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])(function* () {
            if (_this4.callSession.rotateAng === ang) {
                return;
            }
            _this4.callSession.rotateAng = ang;
            if (!_this4.callSession.videoMuted && _this4.cameraVideoStream && _this4.cameraVideoStream.getVideoTracks().length > 0 && _this4.cameraVideoStream.getVideoTracks()[0] && _this4.callSession.sessionCallback.onRotateStream) {
                let streamWithoutAudioTrack = new MediaStream([_this4.cameraVideoStream.getVideoTracks()[0]]);
                let rotatedStream = _this4.callSession.sessionCallback.onRotateStream(streamWithoutAudioTrack, ang);
                if (_this4.callSession.sessionCallback.didRotateLocalVideoTrack) {
                    //rotatedStream.addTrack(this.cameraVideoStream.getAudioTracks()[0]);

                    _this4.callSession.sessionCallback.didRotateLocalVideoTrack(new MediaStream([rotatedStream.getVideoTracks()[0], _this4.cameraVideoStream.getAudioTracks()[0]]));
                }
                if (_this4.videoSender) {
                    _this4.videoSender.replaceTrack(rotatedStream.getVideoTracks()[0]);
                }
                if (_this4.smallVideoSender) {
                    let scaledRotatedStream = _this4.callSession.sessionCallback.onRotateStream(streamWithoutAudioTrack, ang, { width: 200, height: 200 });
                    _this4.smallVideoSender.replaceTrack(scaledRotatedStream.getVideoTracks()[0]);
                }
            }
        })();
    }

    endMedia() {
        if (this.peerConnection) {
            this.peerConnection.close();
            this.peerConnection = null;
        }

        this.stopVideoStream(this.cameraVideoStream);
        if (this.soundMeter) {
            try {
                this.soundMeter.stop();
            } catch (e) {}
            this.soundMeter = null;
        }
        this.cameraVideoStream = null;
        this.audioSender = null;
        this.videoSender = null;
        this.smallVideoSender = null;
    }

    tinyVideoTrackConstraints(videoTrack) {
        let width = _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_WIDTH ? _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_WIDTH : 200;
        let height = _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_HEIGHT ? _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_HEIGHT : 200;
        let constraints = {
            width: { ideal: width, max: width },
            height: { ideal: height, max: height }
        };
        if (!_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].DISABLE_SMALL_STREAM_LOW_FPS) {
            constraints.frameRate = { max: 8, ideal: 8 };
        } else {
            if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_FPS) {
                constraints.frameRate = {
                    ideal: _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_FPS,
                    max: _engine_avenginekit__WEBPACK_IMPORTED_MODULE_7__["default"].SMALL_STREAM_FPS
                };
            }
        }
        let capabilities = videoTrack.getCapabilities();
        if (capabilities.frameRate.max < constraints.frameRate.max) {
            delete constraints.frameRate;
        }
        if (capabilities.height.max < constraints.height.max) {
            delete constraints.height;
        }
        if (capabilities.width.max < constraints.width.max) {
            delete constraints.width;
        }
        return constraints;
    }

    setVideoMaxBitrate(maxBitrateKbps) {
        let bitrate = maxBitrateKbps;
        // if (2 * bitrate < 3600) {
        //     bitrate *= 2;
        // } else if (bitrate < 3600) {
        //     bitrate = 3600;
        // } else {
        //     //keep the same
        // }
        if (this.videoSender) {
            this.setVideoSenderMaxBitrate(this.videoSender, bitrate);
        }

        if (this.smallVideoSender) {
            this.setVideoSenderMaxBitrate(this.smallVideoSender, 160);
        }
    }

    setVideoSenderMaxBitrate(sender, maxBitrateKbps) {
        const parameters = sender.getParameters();
        if (!parameters.encodings || parameters.encodings.length === 0) {
            parameters.encodings = [{}];
        }
        if (parameters.encodings.length < 1) {
            console.error('av-c', 'setVideoSenderMaxBitrate error: no encodings');
            return;
        }
        parameters.encodings[0].maxBitrate = maxBitrateKbps * 1000;
        sender.setParameters(parameters).catch(e => {
            console.error('av-c', 'set maxBitrate error', e);
        });
    }

    scaleVideoResolutionDownBy(scalingFactor) {
        console.log('av-c', 'scaleVideoResolutionDownBy', scalingFactor);
        if (this.videoSender) {
            this.scaleVideoSenderVideoResolutionDownBy(this.videoSender, scalingFactor);
        }

        if (this.smallVideoSender) {
            this.scaleVideoSenderVideoResolutionDownBy(this.smallVideoSender, scalingFactor);
        }
    }

    scaleVideoSenderVideoResolutionDownBy(sender, scalingFactor) {
        const parameters = sender.getParameters();
        if (!parameters.encodings) {
            parameters.encodings = [{}];
        }
        if (parameters.encodings.length < 1) {
            console.log('av-c', 'scaleVideoResolutionDownBy error: no encodings');
            return;
        }
        parameters.encodings[0].scaleResolutionDownBy = scalingFactor;
        sender.setParameters(parameters).catch(e => {
            console.log('av-c', 'set scaleVideoResolutionDownBy error', e);
        });
    }

    stopVideoTrack(stream) {
        console.log('av-c', 'stopVideoTrack');
        if (stream) {
            stream.getTracks().forEach(track => {
                if (track.kind === 'video') {
                    track.stop();
                }
            });
        }
        if (this.smallVideoSender && this.smallVideoSender.track) {
            this.smallVideoSender.track.stop();
        }
    }

    stopAudioTrack(stream) {
        console.log('av-c', 'stopAudioTrack');
        if (stream) {
            stream.getTracks().forEach(track => {
                if (track.kind === 'audio') {
                    track.enabled = false;
                }
            });
        }
    }

    stopVideoStream(stream) {
        if (!stream) {
            return;
        }
        if (typeof stream.getTracks === 'undefined') {
            // Support legacy browsers, like phantomJs we use to run tests.
            stream.stop();
        } else {
            stream.getTracks().forEach(track => {
                console.log('av-c', 'stop track', track.kind, track.id);
                track.stop();
            });
        }
        if (this.smallCameraVideoTrack) {
            console.log('stop smallVideo track', this.smallCameraVideoTrack);
            this.smallCameraVideoTrack.stop();
        }
    }

    restartICE() {
        if (!this.peerConnection) {
            return;
        }
        console.log('av-c', 'restart publish ice');
        this.publishMedia(true);
    }
}

/***/ }),

/***/ "./av/internal/roomErrorCode.js":
/*!**************************************!*\
  !*** ./av/internal/roomErrorCode.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ RoomErrorCode)
/* harmony export */ });
class RoomErrorCode {}
RoomErrorCode.JANUS_VIDEOROOM_ERROR_UNKNOWN_ERROR = 499;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_NO_MESSAGE = 421;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_INVALID_JSON = 422;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_INVALID_REQUEST = 423;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_JOIN_FIRST = 424;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_ALREADY_JOINED = 425;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_NO_SUCH_ROOM = 426;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_ROOM_EXISTS = 427;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_NO_SUCH_FEED = 428;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_MISSING_ELEMENT = 429;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_INVALID_ELEMENT = 430;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_INVALID_SDP_TYPE = 431;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_PUBLISHERS_FULL = 432;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_UNAUTHORIZED = 433;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_ALREADY_PUBLISHED = 434;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_NOT_PUBLISHED = 435;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_ID_EXISTS = 436;
RoomErrorCode.JANUS_VIDEOROOM_ERROR_INVALID_SDP = 437;

/***/ }),

/***/ "./av/internal/screenSharingPublisherImpl.js":
/*!***************************************************!*\
  !*** ./av/internal/screenSharingPublisherImpl.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ScreenSharingPublisherImpl)
/* harmony export */ });
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _engine_videoProfile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../engine/videoProfile */ "../engine/videoProfile");
/* harmony import */ var _engine_avenginekit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../engine/avenginekit */ "../engine/avenginekit");
/* harmony import */ var _publisherImpl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./publisherImpl */ "./av/internal/publisherImpl.js");
/* harmony import */ var _avenginekitImpl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./avenginekitImpl */ "./av/internal/avenginekitImpl.js");
/* harmony import */ var _roomErrorCode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./roomErrorCode */ "./av/internal/roomErrorCode.js");
/* harmony import */ var _engine_callEndReason__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../engine/callEndReason */ "../engine/callEndReason");
/* harmony import */ var _engine_callState__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../engine/callState */ "../engine/callState");










class ScreenSharingPublisherImpl extends _publisherImpl__WEBPACK_IMPORTED_MODULE_4__["default"] {

    constructor(callSession) {
        super(callSession);
    }

    createMediaSenders() {
        var _this = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])(function* () {
            let pc = _this.peerConnection;
            let videoStream = _this.callSession.screenShareStream;
            _this.cameraVideoStream = videoStream;
            let rotatedStream = videoStream;
            if (_this.callSession.rotateAng && _this.callSession.sessionCallback.onRotateStream) {
                rotatedStream = _this.callSession.sessionCallback.onRotateStream(_this.cameraVideoStream, _this.callSession.rotateAng);
                if (_this.callSession.sessionCallback.didRotateLocalVideoTrack) {
                    // rotatedStream.addTrack(this.cameraVideoStream.getAudioTracks()[0]);
                    _this.callSession.sessionCallback.didRotateLocalVideoTrack(new MediaStream([rotatedStream.getVideoTracks()[0]]));
                }
            }
            _this.videoSender = pc.addTrack(rotatedStream.getVideoTracks()[0]);
            if (!_engine_avenginekit__WEBPACK_IMPORTED_MODULE_3__["default"].DISABLE_DUAL_STREAM) {
                let smallCameraVideoTrack;
                if (_this.callSession.rotateAng && _this.callSession.sessionCallback.onRotateStream) {
                    let scaledRotatedStream = _this.callSession.sessionCallback.onRotateStream(_this.cameraVideoStream, _this.callSession.rotateAng, { width: 200, height: 200 });
                    smallCameraVideoTrack = scaledRotatedStream.getVideoTracks()[0];
                } else {
                    smallCameraVideoTrack = videoStream.getVideoTracks()[0].clone();
                }
                // await smallCameraVideoTrack.applyConstraints(this.tinyVideoTrackConstraints(smallCameraVideoTrack))
                _this.smallVideoSender = pc.addTrack(smallCameraVideoTrack);
            }
            if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_3__["default"].SCREEN_SHARE_MAX_BITRATE) {
                _this.setVideoMaxBitrate(_engine_avenginekit__WEBPACK_IMPORTED_MODULE_3__["default"].SCREEN_SHARE_MAX_BITRATE);
            } else {
                let vp = _engine_videoProfile__WEBPACK_IMPORTED_MODULE_2__["default"].getVideoProfile(_engine_avenginekit__WEBPACK_IMPORTED_MODULE_3__["default"].VIDEO_PROFILE);
                _this.setVideoMaxBitrate(vp.bitrate);
            }
        })();
    }

    attachAndPublishScreenSharing() {
        let obj = {};
        obj['session_id'] = this.callSession.sessionId;
        obj['handle_id'] = this.handleId;
        obj['user_id'] = this.callSession.screenSharingId();
        obj['pin'] = this.callSession.pin;
        if (this.callSession.callExtra) {
            obj['extra'] = this.callSession.callExtra;
        }

        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_5__["default"].sendConferenceRequest(this.callSession.sessionId, this.callSession.callId, 'join_pub_ss', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default()(obj), (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'conference request, join_pub_ss, error', errorCode);
                return;
            }
            let result = JSON.parse(res);
            this.handleId = result['handle_id'];
            let data = result['data'];
            let bizError = data['error_code'];
            if (bizError > 0) {
                if (bizError === _roomErrorCode__WEBPACK_IMPORTED_MODULE_6__["default"].JANUS_VIDEOROOM_ERROR_NO_SUCH_ROOM) {
                    this.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_7__["default"].RoomNotExist);
                } else if (errorCode === _roomErrorCode__WEBPACK_IMPORTED_MODULE_6__["default"].JANUS_VIDEOROOM_ERROR_ID_EXISTS) {
                    this.reattachAndPublish();
                } else {
                    this.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_7__["default"].REASON_SignalError);
                }
            } else {
                this.publishMedia();
            }
        });
    }

    reattachAndPublish() {
        setTimeout(() => {
            if (this.callSession.static !== _engine_callState__WEBPACK_IMPORTED_MODULE_8__["default"].STATUS_IDLE) {
                this.attachAndPublishScreenSharing();
            }
        }, 5000);
    }

    deattach() {
        let obj = {};
        obj['session_id'] = this.callSession.sessionId;
        obj['handle_id'] = this.handleId;
        obj['pin'] = this.callSession.pin;

        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_5__["default"].sendConferenceRequest(this.callSession.sessionId, this.callSession.callId, 'deattach', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default()(obj), (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'conference request, ss-deattach, error', errorCode);
                this.callSession.endCall(_engine_callEndReason__WEBPACK_IMPORTED_MODULE_7__["default"].REASON_SignalError);
            }
        });
    }

}

/***/ }),

/***/ "./av/internal/soundMeter.js":
/*!***********************************!*\
  !*** ./av/internal/soundMeter.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SoundMeter: () => (/* binding */ SoundMeter)
/* harmony export */ });
/*
 *  Copyright (c) 2015 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree.
 */



// Meter class that generates a number correlated to audio volume.
// The meter class itself displays nothing, but it makes the
// instantaneous and time-decaying volumes available for inspection.
// It also reports on the fraction of samples that were at or near
// the top of the measurement range.

function SoundMeter(context) {
    this.context = context;
    this.instant = 0.0;
    this.slow = 0.0;
    this.clip = 0.0;
    this.script = context.createScriptProcessor(2048, 1, 1);
    const that = this;
    this.script.onaudioprocess = function (event) {
        const input = event.inputBuffer.getChannelData(0);
        let i;
        let sum = 0.0;
        let clipcount = 0;
        for (i = 0; i < input.length; ++i) {
            sum += input[i] * input[i];
            if (Math.abs(input[i]) > 0.99) {
                clipcount += 1;
            }
        }
        that.instant = Math.sqrt(sum / input.length);
        that.slow = 0.95 * that.slow + 0.05 * that.instant;
        that.clip = clipcount / input.length;
    };
}

SoundMeter.prototype.connectToSource = function (stream, callback) {
    console.log('av-c', 'SoundMeter connecting');
    try {
        this.mic = this.context.createMediaStreamSource(stream);
        this.mic.connect(this.script);
        // necessary to make sample run, but should not be.
        this.script.connect(this.context.destination);
        if (typeof callback !== 'undefined') {
            callback(null);
        }
    } catch (e) {
        console.error('av-c', e);
        if (typeof callback !== 'undefined') {
            callback(e);
        }
    }
};

SoundMeter.prototype.stop = function () {
    console.log('av-c', 'SoundMeter stopping');
    this.mic.disconnect();
    this.script.disconnect();
};

/***/ }),

/***/ "./av/internal/subscriberImpl.js":
/*!***************************************!*\
  !*** ./av/internal/subscriberImpl.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SubscriberImpl)
/* harmony export */ });
/* harmony import */ var babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ "./node_modules/babel-runtime/helpers/asyncToGenerator.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ "./node_modules/babel-runtime/core-js/json/stringify.js");
/* harmony import */ var babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _engine_subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../engine/subscriber */ "../engine/subscriber");
/* harmony import */ var _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./avenginekitImpl */ "./av/internal/avenginekitImpl.js");
/* harmony import */ var _engine_avenginekit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../engine/avenginekit */ "../engine/avenginekit");
/* harmony import */ var _engine_videoType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../engine/videoType */ "../engine/videoType");







class SubscriberImpl extends _engine_subscriber__WEBPACK_IMPORTED_MODULE_2__["default"] {

    constructor(userId, callSession) {
        super();
        this.tickSinceLastFramesDecoded = 0;
        this.availableVideoMids = [];
        this.availableAudioMids = [];
        this.availableDataMids = [];
        this.ready = false;
        this.userId = userId;
        this.callSession = callSession;
        this.availableVideoMids = [];
        this.availableAudioMids = [];
        this.availableDataMids = [];
        this.videoType = callSession.defaultVideoType;
        this.currentVideoType = this.videoType;
    }

    subscribe() {
        if (this.handleId) {
            return;
        }
        this.ready = false;
        let obj = {};
        obj['feed'] = this.userId;
        obj['pin'] = this.callSession.pin;

        let streams = [];
        if (this.availableAudioMids.length > 0) {
            streams.push({
                "feed": this.userId,
                "mid": this.availableAudioMids[0]
            });
        }
        if (this.availableDataMids.length > 0) {
            streams.push({
                "feed": this.userId,
                "mid": this.availableDataMids[0]
            });
        }
        if (!this.callSession.audioOnly) {
            if (this.availableVideoMids.length > 1) {
                if (this.availableAudioMids.length === 0) {
                    /**
                     *  if(self.videoType == WFAVVideoType_BigStream) {
                     *                     [streams addObject:@{@"feed":self.userId, @"mid":self.availableVideoMids[0]}];
                     *                 } else {
                     *                     _videoType = WFAVVideoType_SmallStream;
                     *                     [streams addObject:@{@"feed":self.userId, @"mid":self.availableVideoMids[1]}];
                     *                 }
                     */
                    console.log('av-c', 'subscribe screen share stream', this.videoType);
                    if (this.videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].BIG_STREAM) {
                        streams.push({
                            'feed': this.userId,
                            'mid': this.availableVideoMids[0]
                        });
                    } else {
                        this.videoType = _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].SMALL_STREAM;
                        this.currentVideoType = _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].SMALL_STREAM;
                        streams.push({
                            'feed': this.userId,
                            'mid': this.availableVideoMids[1]
                        });
                    }
                } else {
                    if (this.videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].BIG_STREAM) {
                        streams.push({
                            'feed': this.userId,
                            'mid': this.availableVideoMids[0]
                        });
                    } else if (this.videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].SMALL_STREAM) {
                        streams.push({
                            'feed': this.userId,
                            'mid': this.availableVideoMids[1]
                        });
                    }
                }
            } else if (this.availableVideoMids.length === 1) {
                streams.push({
                    'feed': this.userId,
                    'mid': this.availableVideoMids[0]
                });
            }
        }
        obj['streams'] = streams;
        console.log('xxxxxxx av-c subscribe', this.userId, streams);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__["default"].sendConferenceRequestEx(this.callSession.sessionId, this.callSession.callId, 'join_sub', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default()(obj), this.callSession.advance, (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'join_sub error', errorCode);
                return;
            }
            let result = JSON.parse(res);
            let sessionId = result['session_id'];
            if (sessionId !== this.callSession.sessionId) {
                console.log('av-c', 'join response, unknown sessionId', this.callSession.sessionId, sessionId);
                return;
            }
            this.handleId = result['handle_id'];
            let jsep = result['jsep'];
            console.log('av-c', 'call subscribeMedia', jsep);
            this.subscribeMedia(jsep);
        });
    }

    subscribeMedia(jsep) {
        var _this = this;

        return (0,babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
            console.log('av-c', 'subscribeMedia', jsep);
            if (!jsep) {
                return;
            }
            if (!_this.peerConnection) {
                yield _this.callSession.createPeerConnection(_this.userId);
                console.log('av-c', 'enable data channel', _engine_avenginekit__WEBPACK_IMPORTED_MODULE_4__["default"].ENABLE_DATA_CHANNEL);
                if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_4__["default"].ENABLE_DATA_CHANNEL) {
                    _this.peerConnection.createDataChannel('data_channel', {
                        ordered: true
                    });
                    console.log('av-c', 'listen data channel');
                    _this.peerConnection.ondatachannel = function (ev) {
                        console.log('av-c', 'on data channel ', ev.channel.label, ev);
                        _this.dataChannel = ev.channel;
                        _this.dataChannel.onmessage = function (ev) {
                            console.log('av-c', 'data channel on message', ev.data);
                            _this.callSession.onDataChannelMessage(_this.userId, ev.data);
                        };
                    };
                }
            }
            try {
                if (_engine_avenginekit__WEBPACK_IMPORTED_MODULE_4__["default"].FORCE_MEDIA_OVER_TCP) {
                    jsep.sdp = jsep.sdp.replaceAll(/a=candidate:\d+ \d+ udp.*\r\n?/gm, '');
                    console.log('av-c', 'subscribeMedia force tcp', jsep.sdp);
                }
                yield _this.peerConnection.setRemoteDescription(jsep);
                let answer = yield _this.peerConnection.createAnswer(_this.callSession.defaultSubscribeMediaConstraints());
                yield _this.peerConnection.setLocalDescription(answer);
                let obj = {};
                obj['session_id'] = _this.callSession.sessionId;
                obj['handle_id'] = _this.handleId;
                let body = {};
                body['request'] = 'start';
                body['room'] = _this.callSession.callId;
                obj['body'] = body;
                let aJsep = {};
                aJsep['sdp'] = answer.sdp;
                aJsep['type'] = 'answer';
                obj['jsep'] = aJsep;

                _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__["default"].sendConferenceRequestEx(_this.callSession.sessionId, _this.callSession.callId, 'message', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default()(obj), _this.callSession.advance, function (errorCode, res) {
                    if (errorCode !== 0) {
                        console.log('av-c', 'conference request, message error', errorCode);
                        return;
                    }

                    _this.setReady(true);
                });
            } catch (e) {

                console.log('av-c', 'subscribeMedia error', _this.userId, e);
            }
        })();
    }

    streams(streams) {
        if (!streams) {
            return;
        }
        this.availableVideoMids.length = 0;
        this.availableAudioMids.length = 0;
        console.log('av-c', 'streams', this.userId, streams);
        streams.forEach(stream => {
            if (stream.type === 'video') {
                let mid = stream.mid;
                this.availableVideoMids.push(mid);
            } else if (stream.type === 'audio') {
                let mid = stream.mid;
                this.availableAudioMids.push(mid);
            } else if (stream.type === 'data') {
                let mid = stream.mid;
                this.availableDataMids.push(mid);
            }
        });
    }

    // request to sub/unsub stream
    subscribeStream(subMid, unsubMid) {
        let obj = {
            'handle_id': this.handleId,
            'feed': this.userId
        };

        if (subMid) {
            obj['subscribe'] = [{
                'feed': this.userId,
                'mid': subMid
            }];
        }

        /**
         *     if(unsubMid.length) {
         *         if([self.callSession isScreenSharing:self.userId]) {
         *             [message setObject:@[@{@"feed":self.userId}] forKey:@"unsubscribe"];
         *         } else {
         *             [message setObject:@[@{@"feed":self.userId,@"mid":unsubMid}] forKey:@"unsubscribe"];
         *         }
         *     }
         */
        if (unsubMid) {
            if (this.callSession.getScreenSharingUserId(this.userId)) {
                obj['unsubscribe'] = [{
                    'feed': this.userId
                }];
            } else {
                obj['unsubscribe'] = [{
                    'feed': this.userId,
                    'mid': unsubMid
                }];
            }
        }

        console.log('av-c', 'update request', obj);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__["default"].sendConferenceRequestEx(this.callSession.sessionId, this.callSession.callId, 'update', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default()(obj), this.callSession.advance, (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'conference request, message error', errorCode);
                return;
            }
            console.log('av-c', 'subscribe stream response', obj);
            let result = JSON.parse(res);
            let jsep = result['jsep'];
            if (jsep) {
                this.subscribeMedia(jsep);
            }
        });
    }

    switchTo(mid) {
        let obj = {
            'handle_id': this.handleId,
            'feed': this.userId
        };

        obj['streams'] = [{
            'feed': this.userId,
            'mid': mid,
            'sub_mid': this.callSession.getScreenSharingUserId(this.userId) ? '0' : '1'
        }];
        console.log('av-c', 'wfc switch request', obj);
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__["default"].sendConferenceRequestEx(this.callSession.sessionId, this.callSession.callId, 'switch', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default()(obj), this.callSession.advance, (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'wfc conference switch request, message error', errorCode);
            } else {
                this.setReady(true);
            }
        });
    }

    setReady(ready) {
        this.ready = ready;
        if (ready) {
            this.setVideoType(this.videoType);
        }
    }

    setVideoType(videoType) {
        console.log('av-c', 'av setVideoType', this.userId, this.videoType, this.currentVideoType, videoType);
        if (this.videoType === videoType && this.currentVideoType === videoType) {
            return;
        }
        if (this.callSession.audioOnly) {
            return;
        }

        if (this.availableVideoMids.length === 0) {
            return;
        }
        if (this.availableVideoMids.length === 1 && videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].SMALL_STREAM) {
            return;
        }

        this.videoType = videoType;

        if (!this.handleId) {
            return;
        }
        if (!this.ready) {
            return;
        }
        this.setReady(false);

        if (this.currentVideoType === videoType) {
            this.setReady(true);
            return;
        }

        console.log('av-c', 'av setVideoType to', this.userId, videoType);
        if (this.currentVideoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].NONE) {
            let mid = videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].BIG_STREAM ? this.availableVideoMids[0] : this.availableVideoMids[1];
            this.subscribeStream(mid, null);
            this.currentVideoType = videoType;
        } else if (videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].NONE) {
            let mid = this.currentVideoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].BIG_STREAM ? this.availableVideoMids[0] : this.availableVideoMids[1];
            this.subscribeStream(null, mid);
            this.currentVideoType = videoType;
            // TODO view

        } else {
            let mid = videoType === _engine_videoType__WEBPACK_IMPORTED_MODULE_5__["default"].BIG_STREAM ? this.availableVideoMids[0] : this.availableVideoMids[1];
            this.currentVideoType = videoType;
            this.switchTo(mid);
        }
    }

    restartICE() {
        if (this.audience || !this.peerConnection) {
            return;
        }
        console.log('av-c', 'restart subscribe ice');
        let obj = {
            handle_id: this.handleId
        };
        _avenginekitImpl__WEBPACK_IMPORTED_MODULE_3__["default"].sendConferenceRequestEx(this.callSession.sessionId, this.callSession.callId, 'restart_ice', babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_1___default()(obj), this.callSession.advance, (errorCode, res) => {
            if (errorCode !== 0) {
                console.log('av-c', 'restart ice error', errorCode);
                return;
            }
            let result = JSON.parse(res);
            let jsep = result['jsep'];
            console.log('av-c', 'call subscribeMedia', jsep);
            this.subscribeMedia(jsep);
        });
    }
}

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/json/stringify.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/json/stringify.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/json/stringify */ "./node_modules/core-js/library/fn/json/stringify.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/map.js":
/*!***************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/map.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/map */ "./node_modules/core-js/library/fn/map.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/assign.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/assign.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/keys.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/keys.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/keys */ "./node_modules/core-js/library/fn/object/keys.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/promise.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/promise.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/promise */ "./node_modules/core-js/library/fn/promise.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/asyncToGenerator.js":
/*!****************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/asyncToGenerator.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



exports.__esModule = true;

var _promise = __webpack_require__(/*! ../core-js/promise */ "./node_modules/babel-runtime/core-js/promise.js");

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports["default"] = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/extends.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/extends.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



exports.__esModule = true;

var _assign = __webpack_require__(/*! ../core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports["default"] = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "./node_modules/core-js/library/fn/json/stringify.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/json/stringify.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var core = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/map.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/library/fn/map.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.map */ "./node_modules/core-js/library/modules/es6.map.js");
__webpack_require__(/*! ../modules/es7.map.to-json */ "./node_modules/core-js/library/modules/es7.map.to-json.js");
__webpack_require__(/*! ../modules/es7.map.of */ "./node_modules/core-js/library/modules/es7.map.of.js");
__webpack_require__(/*! ../modules/es7.map.from */ "./node_modules/core-js/library/modules/es7.map.from.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Map;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es6.object.assign */ "./node_modules/core-js/library/modules/es6.object.assign.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.assign;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/keys.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es6.object.keys */ "./node_modules/core-js/library/modules/es6.object.keys.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.keys;


/***/ }),

/***/ "./node_modules/core-js/library/fn/promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/library/fn/promise.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.promise */ "./node_modules/core-js/library/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es7.promise.finally */ "./node_modules/core-js/library/modules/es7.promise.finally.js");
__webpack_require__(/*! ../modules/es7.promise.try */ "./node_modules/core-js/library/modules/es7.promise.try.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Promise;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-instance.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-instance.js ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-from-iterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-from-iterable.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-methods.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-methods.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/library/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-constructor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-constructor.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-create.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-create.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/library/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_classof.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_classof.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_cof.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-strong.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-strong.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var dP = (__webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f);
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var fastKey = (__webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js").fastKey);
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-to-json.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-to-json.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var from = __webpack_require__(/*! ./_array-from-iterable */ "./node_modules/core-js/library/modules/_array-from-iterable.js");
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var dP = (__webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f);
var each = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/library/modules/_array-methods.js")(0);
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    C = wrapper(function (target, iterable) {
      anInstance(target, C, NAME, '_c');
      target._c = new Base();
      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
    });
    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
        anInstance(this, C, KEY);
        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    IS_WEAK || dP(C.prototype, 'size', {
      get: function () {
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/***/ ((module) => {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_defined.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
/***/ ((module) => {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var document = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document);
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
/***/ ((module) => {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_for-of.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_for-of.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/library/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/***/ ((module) => {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/***/ ((module) => {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_html.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var document = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document);
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_invoke.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_invoke.js ***!
  \*********************************************************/
/***/ ((module) => {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iobject.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array-iter.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array-iter.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/***/ ((module) => {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-call.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-call.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-create.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-define.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-detect.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-detect.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-step.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
/***/ ((module) => {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iterators.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_library.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = true;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_meta.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_meta.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var setDesc = (__webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f);
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_microtask.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_microtask.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var macrotask = (__webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set);
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_new-promise-capability.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-assign.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  (__webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js").appendChild)(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dps.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gops.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gpo.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-pie.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-sap.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_perform.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_perform.js ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_promise-resolve.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_promise-resolve.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine-all.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-from.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-from.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-of.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-species.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-species.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var def = (__webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f);
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_species-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_species-constructor.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_string-at.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_task.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_task.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-integer.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
/***/ ((module) => {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-iobject.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_uid.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
/***/ ((module) => {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_user-agent.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/library/modules/_validate-collection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_validate-collection.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var Symbol = (__webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").Symbol);
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
module.exports = (__webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js").getIteratorMethod) = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.map.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.map.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/library/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/library/modules/_collection.js")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/library/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.keys.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.promise.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.promise.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {


var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var task = (__webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set);
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/library/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/library/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/library/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {


var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.from.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.from.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
__webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/library/modules/_set-collection-from.js")('Map');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.of.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.of.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
__webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/library/modules/_set-collection-of.js")('Map');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.to-json.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.to-json.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(/*! ./_collection-to-json */ "./node_modules/core-js/library/modules/_collection-to-json.js")('Map') });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.finally.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.try.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.try.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {


// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "../../../config.js":
/*!*************************************!*\
  !*** external "../../../config.js" ***!
  \*************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__config_js_feac86c3__;

/***/ }),

/***/ "../../../platform.js":
/*!***************************************!*\
  !*** external "../../../platform.js" ***!
  \***************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__platform_js_5bab0402__;

/***/ }),

/***/ "../../messages/messageContentType":
/*!****************************************************!*\
  !*** external "../../messages/messageContentType" ***!
  \****************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_messageContentType_55d9ecb1__;

/***/ }),

/***/ "../../model/conversation":
/*!*******************************************!*\
  !*** external "../../model/conversation" ***!
  \*******************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__model_conversation_0780e5f9__;

/***/ }),

/***/ "../../model/conversationType":
/*!***********************************************!*\
  !*** external "../../model/conversationType" ***!
  \***********************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__model_conversationType_15f72c18__;

/***/ }),

/***/ "../../model/nullUserInfo":
/*!*******************************************!*\
  !*** external "../../model/nullUserInfo" ***!
  \*******************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__model_nullUserInfo_e3b93e16__;

/***/ }),

/***/ "../../util/longUtil.js":
/*!*****************************************!*\
  !*** external "../../util/longUtil.js" ***!
  \*****************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__util_longUtil_js_d8567d8b__;

/***/ }),

/***/ "../engine/avenginekit":
/*!****************************************!*\
  !*** external "../engine/avenginekit" ***!
  \****************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_avenginekit_ecab215a__;

/***/ }),

/***/ "../engine/avenginekitproxy":
/*!*********************************************!*\
  !*** external "../engine/avenginekitproxy" ***!
  \*********************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_avenginekitproxy_1fb02dc3__;

/***/ }),

/***/ "../engine/callEndReason":
/*!******************************************!*\
  !*** external "../engine/callEndReason" ***!
  \******************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_callEndReason_07aecc5d__;

/***/ }),

/***/ "../engine/callSession":
/*!****************************************!*\
  !*** external "../engine/callSession" ***!
  \****************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_callSession_c8924da4__;

/***/ }),

/***/ "../engine/callState":
/*!**************************************!*\
  !*** external "../engine/callState" ***!
  \**************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_callState_9f65f17e__;

/***/ }),

/***/ "../engine/participantProfile":
/*!***********************************************!*\
  !*** external "../engine/participantProfile" ***!
  \***********************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_participantProfile_3b6167a6__;

/***/ }),

/***/ "../engine/rcEndReason":
/*!****************************************!*\
  !*** external "../engine/rcEndReason" ***!
  \****************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_rcEndReason_3aaf0b41__;

/***/ }),

/***/ "../engine/rcState":
/*!************************************!*\
  !*** external "../engine/rcState" ***!
  \************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_rcState_0c29bc19__;

/***/ }),

/***/ "../engine/subscriber":
/*!***************************************!*\
  !*** external "../engine/subscriber" ***!
  \***************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_subscriber_55ef553e__;

/***/ }),

/***/ "../engine/videoProfile":
/*!*****************************************!*\
  !*** external "../engine/videoProfile" ***!
  \*****************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_videoProfile_3d10661d__;

/***/ }),

/***/ "../engine/videoType":
/*!**************************************!*\
  !*** external "../engine/videoType" ***!
  \**************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__engine_videoType_c198b7fe__;

/***/ }),

/***/ "../messages/addParticipantsMessageContent":
/*!************************************************************!*\
  !*** external "../messages/addParticipantsMessageContent" ***!
  \************************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_addParticipantsMessageContent_e5933adc__;

/***/ }),

/***/ "../messages/callAnswerMessageContent":
/*!*******************************************************!*\
  !*** external "../messages/callAnswerMessageContent" ***!
  \*******************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_callAnswerMessageContent_dadb75d0__;

/***/ }),

/***/ "../messages/callByeMessageContent":
/*!****************************************************!*\
  !*** external "../messages/callByeMessageContent" ***!
  \****************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_callByeMessageContent_bc5f41f7__;

/***/ }),

/***/ "../messages/callModifyMessageContent":
/*!*******************************************************!*\
  !*** external "../messages/callModifyMessageContent" ***!
  \*******************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_callModifyMessageContent_dafbb85c__;

/***/ }),

/***/ "../messages/callStartMessageContent":
/*!******************************************************!*\
  !*** external "../messages/callStartMessageContent" ***!
  \******************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_callStartMessageContent_6cc158ed__;

/***/ }),

/***/ "../messages/conferenceChangeModeContent":
/*!**********************************************************!*\
  !*** external "../messages/conferenceChangeModeContent" ***!
  \**********************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_conferenceChangeModeContent_da8c6c1f__;

/***/ }),

/***/ "../messages/muteVideoMessageContent":
/*!******************************************************!*\
  !*** external "../messages/muteVideoMessageContent" ***!
  \******************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_muteVideoMessageContent_33b54995__;

/***/ }),

/***/ "../messages/rcAcceptInviteMessageContent":
/*!***********************************************************!*\
  !*** external "../messages/rcAcceptInviteMessageContent" ***!
  \***********************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_rcAcceptInviteMessageContent_d3f1af63__;

/***/ }),

/***/ "../messages/rcEndMessageContent":
/*!**************************************************!*\
  !*** external "../messages/rcEndMessageContent" ***!
  \**************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_rcEndMessageContent_f241994f__;

/***/ }),

/***/ "../messages/rcInputEventMessageContent":
/*!*********************************************************!*\
  !*** external "../messages/rcInputEventMessageContent" ***!
  \*********************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_rcInputEventMessageContent_cd47b2e3__;

/***/ }),

/***/ "../messages/rcInviteMessageContent":
/*!*****************************************************!*\
  !*** external "../messages/rcInviteMessageContent" ***!
  \*****************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_rcInviteMessageContent_ffd6f517__;

/***/ }),

/***/ "../messages/rcRequestMessageContent":
/*!******************************************************!*\
  !*** external "../messages/rcRequestMessageContent" ***!
  \******************************************************/
/***/ ((module) => {

var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
module.exports = __WEBPACK_EXTERNAL_MODULE__messages_rcRequestMessageContent_29ad6093__;

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module is referenced by other modules so it can't be inlined
/******/ var __webpack_exports__ = __webpack_require__("./av/internal/avenginekitImpl.js");
/******/ var __webpack_exports__WfcAVEngineKitImpl = __webpack_exports__.WfcAVEngineKitImpl;
/******/ var __webpack_exports__default = __webpack_exports__["default"];
/******/ export { __webpack_exports__WfcAVEngineKitImpl as WfcAVEngineKitImpl, __webpack_exports__default as default };
/******/ 

//# sourceMappingURL=engine-conference.min.js.map